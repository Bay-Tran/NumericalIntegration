/**
 * \file QuadratureKronrod.h
 * \sa R Piessens, E de Doncker-Kapenger, C Ueberhuber, D Kahaner, QUADPACK, A Subroutine Package
 *     for Automatic Integration, Springer Verlag, 1983.
 */

#ifndef EIGEN_QUADRATURE_KRONROD_H
#define EIGEN_QUADRATURE_KRONROD_H

namespace Eigen
{

/**
 * \brief The abscissae and weights are given for the interval (-1,1).
 *        Because of symmetry, only the positive abscissae and their
 *        corresponding weights are given.
 *
 * \var abscissaeGaussKronrod15  The abscissae of the  15 point kronrod rule.
 * \var abscissaeGaussKronrod21  The abscissae of the  21 point kronrod rule.
 * \var abscissaeGaussKronrod31  The abscissae of the  31 point kronrod rule.
 * \var abscissaeGaussKronrod41  The abscissae of the  41 point kronrod rule.
 * \var abscissaeGaussKronrod51  The abscissae of the  51 point kronrod rule.
 * \var abscissaeGaussKronrod61  The abscissae of the  61 point kronrod rule.
 * \var abscissaeGaussKronrod71  The abscissae of the  71 point kronrod rule.
 * \var abscissaeGaussKronrod81  The abscissae of the  81 point kronrod rule.
 * \var abscissaeGaussKronrod91  The abscissae of the  91 point kronrod rule.
 * \var abscissaeGaussKronrod101 The abscissae of the 101 point kronrod rule.
 * \var abscissaeGaussKronrod201 The abscissae of the 201 point kronrod rule.
 *
 * \var weightsGaussKronrod15  The weights of the  15 point kronrod rule.
 * \var weightsGaussKronrod21  The weights of the  21 point kronrod rule.
 * \var weightsGaussKronrod31  The weights of the  31 point kronrod rule.
 * \var weightsGaussKronrod41  The weights of the  41 point kronrod rule.
 * \var weightsGaussKronrod51  The weights of the  51 point kronrod rule.
 * \var weightsGaussKronrod61  The weights of the  61 point kronrod rule.
 * \var weightsGaussKronrod71  The weights of the  71 point kronrod rule.
 * \var weightsGaussKronrod81  The weights of the  81 point kronrod rule.
 * \var weightsGaussKronrod91  The weights of the  91 point kronrod rule.
 * \var weightsGaussKronrod101 The weights of the 101 point kronrod rule.
 * \var weightsGaussKronrod201 The weights of the 201 point kronrod rule.
 *
 * \var weightsGauss15  The weights of the   7 point gauss rule.
 * \var weightsGauss21  The weights of the  10 point gauss rule.
 * \var weightsGauss31  The weights of the  15 point gauss rule.
 * \var weightsGauss41  The weights of the  20 point gauss rule.
 * \var weightsGauss51  The weights of the  25 point gauss rule.
 * \var weightsGauss61  The weights of the  30 point gauss rule.
 * \var weightsGauss71  The weights of the  35 point gauss rule.
 * \var weightsGauss81  The weights of the  40 point gauss rule.
 * \var weightsGauss91  The weights of the  45 point gauss rule.
 * \var weightsGauss101 The weights of the  50 point gauss rule.
 * \var weightsGauss201 The weights of the 100 point gauss rule.
 */

template <typename Scalar>
class QuadratureKronrod
{
public:

    typedef Kronrod::LaurieGautschi<Scalar> LaurieGautschiPolicy;
    typedef typename LaurieGautschiPolicy::VectorType VectorType;

    static void ComputeNodesAndWeights()
    {
        /*---------Begin generic Node/Weight calculation function----------//
        void CalculateNodesAndWeightsForGaussRule(int gaussRule, VectorType& kronrodAbscissae, VectorType& kronrodWeights,
            VectorType& gaussAbscissae, VectorType& gaussWeights)
        {
            int N = gaussRule;

            VectorType xGK = VectorType::Zero(2*N+1);
            VectorType wGK = VectorType::Zero(2*N+1);
            VectorType xG = VectorType::Zero(N);
            VectorType wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                kronrodAbscissae(2*N-i) = xGK(i);
                kronrodWeights(2*N-i) =  wGK(i);
            }

            for(size_t i=N-1; i>=N/2; --i)
            {
                gaussAbscissae(N-1-i) = xG(i);
                gaussWeights(N-1-i) = wG(i);
            }
        }
        //---------End generic node weight calculation function----------*/

        if(compute)
        {
            VectorType xGK;
            VectorType wGK;
            VectorType xG;
            VectorType wG;
            int N;
	        
            //--------------15--------------//
            N = 7;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod15(2*N-i) = xGK(i);
                weightsGaussKronrod15(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss15(N-1-i) = wG(i);
            }

	        //--------------21--------------//
            N = 10;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod21(2*N-i) = xGK(i);
                weightsGaussKronrod21(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss21(N-1-i) = wG(i);
            }

	        //--------------31--------------//
            N = 15;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod31(2*N-i) = xGK(i);
                weightsGaussKronrod31(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss31(N-1-i) = wG(i);
            }

	        //--------------41--------------//
            N = 20;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod41(2*N-i) = xGK(i);
                weightsGaussKronrod41(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss41(N-1-i) = wG(i);
            }

	        //--------------51--------------//
            N = 25;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod51(2*N-i) = xGK(i);
                weightsGaussKronrod51(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss51(N-1-i) = wG(i);
            }

	        //--------------61--------------//
            N = 30;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod61(2*N-i) = xGK(i);
                weightsGaussKronrod61(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss61(N-1-i) = wG(i);
            }

	        //--------------71--------------//
            N = 35;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod71(2*N-i) = xGK(i);
                weightsGaussKronrod71(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss71(N-1-i) = wG(i);
            }

	        //--------------81--------------//
            N = 40;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod81(2*N-i) = xGK(i);
                weightsGaussKronrod81(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss81(N-1-i) = wG(i);
            }

	        //--------------91--------------//
            N = 45;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod91(2*N-i) = xGK(i);
                weightsGaussKronrod91(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss91(N-1-i) = wG(i);
            }

	        //--------------101--------------//
            N = 50;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod101(2*N-i) = xGK(i);
                weightsGaussKronrod101(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss101(N-1-i) = wG(i);
            }

	        //--------------201--------------//
            N = 100;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod201(2*N-i) = xGK(i);
                weightsGaussKronrod201(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss201(N-1-i) = wG(i);
            }

            compute = false;
        }
    }

    static Array<Scalar, 8, 1> abscissaeGaussKronrod15;
    static Array<Scalar, 8, 1> weightsGaussKronrod15;
    static Array<Scalar, 4, 1> weightsGauss15;

    static Array<Scalar, 11, 1> abscissaeGaussKronrod21;
    static Array<Scalar, 11, 1> weightsGaussKronrod21;
    static Array<Scalar, 5, 1> weightsGauss21;

    static Array<Scalar, 16, 1> abscissaeGaussKronrod31;
    static Array<Scalar, 16, 1> weightsGaussKronrod31;
    static Array<Scalar, 8, 1> weightsGauss31;

    static Array<Scalar, 21, 1> abscissaeGaussKronrod41;
    static Array<Scalar, 21, 1> weightsGaussKronrod41;
    static Array<Scalar, 10, 1> weightsGauss41;

    static Array<Scalar, 26, 1> abscissaeGaussKronrod51;
    static Array<Scalar, 26, 1> weightsGaussKronrod51;
    static Array<Scalar, 13, 1> weightsGauss51;

    static Array<Scalar, 31, 1> abscissaeGaussKronrod61;
    static Array<Scalar, 31, 1> weightsGaussKronrod61;
    static Array<Scalar, 15, 1> weightsGauss61;

    static Array<Scalar, 36, 1> abscissaeGaussKronrod71;
    static Array<Scalar, 36, 1> weightsGaussKronrod71;
    static Array<Scalar, 18, 1> weightsGauss71;

    static Array<Scalar, 41, 1> abscissaeGaussKronrod81;
    static Array<Scalar, 41, 1> weightsGaussKronrod81;
    static Array<Scalar, 20, 1> weightsGauss81;

    static Array<Scalar, 46, 1> abscissaeGaussKronrod91;
    static Array<Scalar, 46, 1> weightsGaussKronrod91;
    static Array<Scalar, 23, 1> weightsGauss91;

    static Array<Scalar, 51, 1> abscissaeGaussKronrod101;
    static Array<Scalar, 51, 1> weightsGaussKronrod101;
    static Array<Scalar, 25, 1> weightsGauss101;

    static Array<Scalar, 101, 1> abscissaeGaussKronrod201;
    static Array<Scalar, 101, 1> weightsGaussKronrod201;
    static Array<Scalar, 50, 1> weightsGauss201;

    static bool compute;
};

template <typename Scalar>
bool QuadratureKronrod<Scalar>::compute = true;

template <typename Scalar>
Array<Scalar, 8, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod15 =
  (Array<Scalar, 8, 1>() <<
    0.9914553711208126392068546975263285166420443383703347012910874135724417393467395311959223158579898182,
    0.9491079123427585245261896840478512624007709376706177835487691039130633303549913750152426634999373872,
    0.8648644233597690727897127886409262012109723070740881486014577127670677081329196062699399492945921769,
    0.7415311855993944398638647732807884070741476471413902601199553519674298746723054429551872758361222545,
    0.5860872354676911302941448382587295984367807506043609513049928931988037360746741251084810644144118587,
    0.4058451513773971669066064120769614633473820140993701263870432517946638132262604773069053648365134245,
    0.2077849550078984676006894037732449134797844071451706497138457346198669384494624223487954443172451769,
    0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

  ).finished();

template <typename Scalar>
Array<Scalar, 8, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod15 =
  (Array<Scalar, 8, 1>() <<
    0.0229353220105292249637320080589695919935608112757469922675074302547118157941979208552170438830907559,
    0.06309209262997855329070066318920428666507115721155070711360554514698399721527261660666905169185670538,
    0.1047900103222501838398763225415180174437566542138306118933906513396374634724850260403342167587865607,
    0.1406532597155259187451895905102379203998897572479985755617454689331270809306615627045835528455867577,
    0.1690047266392679028265834265985502841062449003029442414973400675569568092163682043456404001274171103,
    0.190350578064785409913256402421013682826078075455358355885440880367440580724053549398893738766575509,
    0.2044329400752988924141619992346490847165176041807183574244709531204546769854120083868525240481817976,
    0.2094821410847278280129991748917142636977620802237043167129980065613751513232304646546188274403358352
  ).finished();

template <typename Scalar>
Array<Scalar, 4, 1> QuadratureKronrod<Scalar>::weightsGauss15 =
  (Array<Scalar, 4, 1>() <<
    0.1294849661688696932706114326790820183285874022599466639772086387246552349720958604336291853703273918,
    0.2797053914892766679014677714237795824869250652265987645370140326936188104306645277225680505225457176,
    0.3818300505051189449503697754889751338783650835338627347510834510307055464339876371456294445926669768,
    0.4179591836734693877551020408163265306122448979591836734693877551020408163265816749133424890305483048
  ).finished();

template <typename Scalar>
Array<Scalar, 11, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod21 =
  (Array<Scalar, 11, 1>() <<
    0.9956571630258080807355272806890028479212605872194789243633791611175702304675017509791522675963548498,
    0.9739065285171717200779640120844520534282699466923821192312120666965952032346338812167418361600864235,
    0.9301574913557082260012071800595083462251679099819392423034940686682841598308224460719784896051469471,
    0.8650633666889845107320966884234930485275430149653304525219597318453747551382085151728505563200790967,
    0.7808177265864168970637175783450423771634075202981571797469485999950560798276978794834417867346056657,
    0.6794095682990244062343273651148735757692947118348094676648171889525585753949079083524918183965029677,
    0.562757134668604683339000099272694140843013881941966958860346214587792663532061613913692247480500732,
    0.4333953941292471907992659431657841622000718376562464965027015131437669890777828259456331321685540127,
    0.2943928627014601981311266031038655661626866251569579186488822917272461116634801677295067130176222231,
    0.1488743389816312108848260011297199846175648594206916957079892535159036173555054752997513180321471875,
    0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 11, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod21 =
  (Array<Scalar, 11, 1>() <<
    0.01169463886737187427806439606219204839621733248193188892759814752562222206237425646772777413948086316,
    0.03255816230796472747881897245938976061738893984566260957153750423271412164049354112183713012373747995,
    0.05475589657435199603138130024458017637372111405833355752443261580478409910291191762509720354407435474,
    0.07503967481091995276704314091619000939521938200091008817369704804843040434314348697554353413793765014,
    0.09312545458369760553506546508336634439001882888076003197008503876017773567242569855316252936610966259,
    0.1093871588022976418992105903258049602718132998343452200781967582982655037287085254824243265389241824,
    0.1234919762620658510779581098310741595123003495286483276446799412097405423897198205401274812646437579,
    0.134709217311473325928054001771706832760991913008559714066366684913202914001135096708409285382323382,
    0.1427759385770600807970942731387170608859790565319055556074100474397077044991859538842741817755567888,
    0.1477391049013384913748415159720680455237316254852066045181919543988599301673826756507321964478143326,
    0.1494455540029169056649364683898212037452363166874728038356085187369896447850758372187572527540311568
  ).finished();

template <typename Scalar>
Array<Scalar, 5, 1> QuadratureKronrod<Scalar>::weightsGauss21 =
  (Array<Scalar, 5, 1>() <<
    0.06667134430868813759356880989333179285786483432015814512869488161341206408382937552948644746917083929,
    0.1494513491505805931457763396576973324025566396694273678354772687532386547269585574196744322185278705,
    0.2190863625159820439955349342281631924587718705226770898809565436351999106530597291312374705192565402,
    0.269266719309996355091226921569469352859759938460883795800563276242153432319091171229692247101834101,
    0.2955242247147528701738929946513383294210467170268536013543080297559959382171011089694767144976030609
  ).finished();

template <typename Scalar>
Array<Scalar, 16, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod31 =
  (Array<Scalar, 16, 1>() <<
    0.9980022986933970602851728401522712090734064423155572303483942797068334868285241944863789021994089456,
    0.9879925180204854284895657185866125811469728171237614899999975155873884373693588347960690544636395352,
    0.9677390756791391342573479787843372252833573373001316379746806222633580424948124527840338896290041446,
    0.9372733924007059043077589477102094712439962735153044579013630763502029737970283134274673880418902194,
    0.8972645323440819008825096564544958828317787114944278676397268760107853772143132698103968303981958409,
    0.8482065834104272162006483207742168513662561747369926340957275587606750751741380286229929949289600843,
    0.7904185014424659329676492948179473468621405199569761733236528064330830297464070435152096129677997657,
    0.7244177313601700474161860546139380096308992945841025635514234207041237816779178544169491301424741877,
    0.6509967412974169705337358953132746925469482260925996670896616057609330584103069026261703615170012501,
    0.5709721726085388475372267372539106412383863962827496048532654170541953798696814726018140763398692673,
    0.4850818636402396806936557402323506128663389308940731212936794360408023995517764832429066751705506103,
    0.3941513470775633698972073709810454683627527761586982550311653439516089577870746758296962859867820453,
    0.2991800071531688121667800242663889626616033827438208018412554573891808110251484234370133867561701051,
    0.2011940939974345223006283033945962078128364544626376796159497246099482390028734428057022071053433741,
    0.1011420669187174990270742314473923387874510574016418049580018950415109786244729213535576714232292297,
    0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 16, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod31 =
  (Array<Scalar, 16, 1>() <<
    0.00537747987292334898779205143012764981830804024312841978764861695368486356692931663270604276449807903,
    0.01500794732931612253837476307580726809463943643738763497929175970089649428318220534666355656957387515,
    0.02546084732671532018687400101965335939727174504686464050837798498240090389877810993311821010051638757,
    0.03534636079137584622203794847836004812263067899242082086814802334090250183725990208741372236152876351,
    0.04458975132476487660822729937327969022325664966792109657098082321180545069968127220043521815692578322,
    0.0534815246909280872653431472394302967715547609471167398132228887527274136162212192333922001415024434,
    0.06200956780067064028513923096080293219040000421032972356914782939561837620629235973535225354681387446,
    0.06985412131872825870952007709914747578604543514067154969879809317799267562483459540726287506344243603,
    0.07684968075772037889443277748265900672210910116794700058408909711247082109201576856293031542063517487,
    0.0830805028231330210382892472861037896015541882533687176072816048752336306439319231086045890952170541,
    0.08856444305621177064727544369377430321226673269065596781799605257487714454506899198515915834154905959,
    0.09312659817082532122548687274734571856192788132131733056028587918905200287424726867329270417501758704,
    0.09664272698362367850517990762758933513665656863049519897340766888293439236015129532858926687255584447,
    0.09917359872179195933239317348460313105956726081671328173486009569365156306424439851688387613296561304,
    0.1007698455238755950449466626175697219163483801353637306927892902948812276080879591810725060544924368,
    0.1013300070147915490173747927674925467709262725965962924673485837217410761578254007358370890446300772
  ).finished();

template <typename Scalar>
Array<Scalar, 8, 1> QuadratureKronrod<Scalar>::weightsGauss31 =
  (Array<Scalar, 8, 1>() <<
    0.03075324199611726835462839357720441772174814483343407426422828550423718946696862894340345079508479062,
    0.07036604748810812470926741645066733846670803275433071982590729291438705551285307003494515153826051851,
    0.107159220467171935011869546685869303415543715758101980687022389121877994852244780229068395414922247,
    0.1395706779261543144478047945110283225208502753155112432023911286310884445419606728814182028792768188,
    0.166269205816993933553200860481208811130900180098412907321865190563553563212415326443928815992600827,
    0.1861610000155622110268005618664228245062260122779284028154957273100132555027112459662137107256753466,
    0.1984314853271115764561183264438393248186925599575419934847379279291247975334430547501960697794622999,
    0.2025782419255612728806201999675193148386621580094773567967041160514353987547567835324606126928383316
  ).finished();

template <typename Scalar>
Array<Scalar, 21, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod41 =
  (Array<Scalar, 21, 1>() <<
    0.9988590315882776638383155765458630099995702043262966686666686033932441179331542628166457988550838749,
    0.9931285991850949247861223884713202782226471309016558961481841312179847176278552688159872138555047599,
    0.9815078774502502591933429947202169445672509398102375986907753331879309885746336457337711299972685665,
    0.9639719272779137912676661311972772219120603278061888560635375938920415807840953959103861573757687339,
    0.9408226338317547535199827222124433802742955737796529105953683997318679600651881931591201900322982523,
    0.9122344282513259058677524412032981130491847974236917747958822191580708912084033921933242319507602677,
    0.8782768112522819760774429951130784667112452682825116485389808699824814590470438072882717585919069262,
    0.83911697182221882339452906170152068532962936506563737325249272553286109399931721993930926835869998,
    0.7950414288375511983506388332727879429593895991157802970385516389432269787171226737771055498384532071,
    0.7463319064601507926143050703556415903107306795691764441395459060685353550381070013364414191306574336,
    0.6932376563347513848054907118459315333864258514102141790468737845430119171072946794104711847645832721,
    0.6360536807265150254528366962262859367433891167993684639394466225465412625855733229763688344990399498,
    0.5751404468197103153429460365864251328138126401477168253741588549571746807473420222602405049530665962,
    0.5108670019508270980043640509552509984254913292024268334723486198947349703903750145905597955590347907,
    0.4435931752387251031999922134926401078401010108230030961331502834629954305932957427242862020307929471,
    0.3737060887154195606725481770249272373957463217056827118279486135156457643732914923413413371694804661,
    0.3016278681149130043205553568585922606153965050137309245692637442795695743600595386485802922266666006,
    0.2277858511416450780804961953685746247430889376829274723146357392071713418635946661040015074157248192,
    0.152605465240922675505220241022677527911676224818417306601741567038091336857545541087689592045809699,
    0.07652652113349733375464040939883821100479626681349750080479524438425634204827043030131905195386277335,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 21, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod41 =
  (Array<Scalar, 21, 1>() <<
    0.003073583718520531501218293246030987488033504688254344919846162821211433393667288704252117715572975699,
    0.008600269855642942198661787950102347252128922766707797662245060203142652486015161041538713248344369749,
    0.01462616925697125298378796030886835616388105016224977034210347463107696105346358644013612553249952946,
    0.02038837346126652359801023143275470512283862794018592936537186821443300653149738785141863957381762761,
    0.02588213360495115883450506709615314299947911804867494452699779775537430642156283513544070714368084858,
    0.03128730677703279895854311932380073788776928036281333735955459800532242326587436966554769400798514949,
    0.03660016975820079803055724070721100848745349674749800165107000944197328006137991675444211890675876717,
    0.04166887332797368626378830593689473804396084315301032486096635323527188959635805847344671872253784386,
    0.04643482186749767472023188092610751684212707100707792928999412793324322258569104619498251226030905134,
    0.05094457392372869193270767005034494866483636580926257974751714008611911347738935060589180087988585634,
    0.05519510534828599474483237241977732919475345622815311690981213121317782770813815220190637956243577501,
    0.05911140088063957237496722064859421713641936597704219174838804720401526284055068116392020392218802688,
    0.062653237554781168025870122174254980585819744698897886186553324157100424088607224086000938345704118,
    0.06583459713361842211156355696939794314722350634338144370975174963994442031438963769679951835451401477,
    0.06864867292852161934562341188536780171548970495823986040043426417392380602975609444214836872187481345,
    0.07105442355344406830579036172321016741291215932221014392162827058640738187976247828037511548762668948,
    0.07303069033278666749518941765891311276062684523455274238017425077184974383176320110316013118546475263,
    0.07458287540049918898658141836248752861611649357209227308004704072696989956780296720988258988560116138,
    0.07570449768455667465954277537661655826336315590041432619485522327234883859596100636247026063015086595,
    0.07637786767208073670550283503806100180080103676494599671494643111693674554181325944813452399542823516,
    0.07660071191799965644504990153010174082793250062867011805548534962031472145689574548139656926472349558
  ).finished();

template <typename Scalar>
Array<Scalar, 10, 1> QuadratureKronrod<Scalar>::weightsGauss41 =
  (Array<Scalar, 10, 1>()  <<
    0.01761400713915211831186196235185281636214310554333673252434932667734841925971001916259647115832625927,
    0.04060142980038694133103995227493210987909063998995153681760685456183229675076315506369752336375265979,
    0.06267204833410906356950653518704160635160107657843636409958434543797481103353242372098344138320300026,
    0.08327674157670474872475814322204620610017782858316329074488206078569308289417390300421070130022334042,
    0.1019301198172404350367501354803498761666916560233925562619716161968523220255384479301544297153406517,
    0.1181945319615184173123773777113822870050412195489687754468899520201747483506178707242954866121682597,
    0.1316886384491766268984944997481631349161105111469835269964364937088543564295201322182493692927403186,
    0.1420961093183820513292983250671649330345154133920203033373670829838280874980661644319254690978614652,
    0.1491729864726037467878287370019694366926799040813683164962112178098444225953401751698748100738380106,
    0.1527533871307258506980843319550975934919486451123785972747010498175974531626853518021470379320046296
  ).finished();

template <typename Scalar>
Array<Scalar, 26, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod51 =
  (Array<Scalar, 26, 1>() <<
    0.999262104992609834193457486540340593704524960422796185862286977629045244281389908861906539216914657,
    0.9955569697904980979087849468939016172575626494048081712108049311329334813431669647228461693451333144,
    0.9880357945340772476373310145774062270724841520916074813144997219940518682132971998242125077940611527,
    0.976663921459517511498315386479594067745370555314406744670987427316163867535907081950522233571882359,
    0.9616149864258425124181300336601672416921264296370967666662452014129289328118377667084807658536297917,
    0.942974571228974339414011169658470531905201570608990141927452497137295322543730503767199510978090171,
    0.9207471152817015617463460845463306315745703599627719970064283650113138504261830350381717506584225524,
    0.8949919978782753688510420067828049541745548497535839030617016829591715109011213384027643390231326306,
    0.8658470652932755954489969695883400882028440940282369029396521324669143294819558200046206795379129966,
    0.8334426287608340014210211086935695694609641138235207860208647154617181324772804012459651566437531948,
    0.7978737979985000594104109049943065694086323000933826766170693449948865081766905250018600966560640317,
    0.7592592630373576305772828652043609763875220188983341209183897354450186288204718463682599740595375977,
    0.717766406813084388186654079773297780597711675555155824234934868239916128209767318070625793244371019,
    0.673566368473468364485120633247622175883416728072749317059656961778287736849272216799410049220052496,
    0.6268100990103174127881226816245178810195462899506851080652522200843726018417780658089944349901949129,
    0.5776629302412229677236898416126540673957350392915182566454835077610230127525411681078731828889163481,
    0.5263252843347191825996237781580101780368325232019111431300242518047145502247959349260852905021218592,
    0.4730027314457149605221821150091920413318177384616272909072308276956032758414367194400273301471402724,
    0.4178853821930377488518143945945724870933699814006952803495578506879693207697443155937919949783315986,
    0.3611723058093878377358217301276406674220783470433750697945787778467453823955758711918783689802471951,
    0.3030895389311078301674789099803393292004193787665519468573157845257312037232950946765089958136606202,
    0.2438668837209884320451903627974515864056331563259844764211356532503874727858486234686672131187236048,
    0.1837189394210488920159698887595284157852844783499055521503451265323675285108535228544566379825066833,
    0.1228646926107103963873598188080368055322053460497837384238935378927088349686598229436243647377415821,
    0.06154448300568507888654639236679663128172434803982354527430543175168727936154714858190046742761093415,
    0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 26, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod51 =
  (Array<Scalar, 26, 1>() <<
    0.001987383892330315926507851882843409889429980428250597383765334629898562963947196644145364822901049107,
    0.005561932135356713758040236901065522070176929549629098405296121079381002708428017821256270910750491242,
    0.009473973386174151607207710523655323871645326848372633497139402960352931761295254768092391682370013853,
    0.01323622919557167481365640584697623807757808499786365473221386048856061458701154297543592212873926234,
    0.01684781770912829823151666753633631584040265462470613941117576927684218227023022643045887593079801114,
    0.02043537114588283545656829223593897367875800609766893722007453155016362256622612275051843222013788651,
    0.0240099456069532162200924891648810813929315282096593302907349723425360122827917757364250598908575491,
    0.02747531758785173780294845551781107861479601328871060319961362106972781035256197819368422154788789041,
    0.0307923001673874888911090202152285856008771623932924876445448305599653880487227923040798423380459896,
    0.03400213027432933783674879522955120322567052825005044308326419312152433906261402278825147842043597769,
    0.03711627148341554356033062536761987599599780268804776480562870276277300967036955511152755280462602853,
    0.04008382550403238207483928446707564640141054926659130871311587838683577731423906249138340234811372392,
    0.04287284502017004947689579243949516110199950419988332887791924251573895765618787401986877723451729608,
    0.04550291304992178890987058475266039304370776893569532731672425439279429956639787752698097344507212541,
    0.04798253713883671390639225575691475498359220742327116965123586519675791388234076435966838387012902378,
    0.05027767908071567196332525943344008444058763060477597514205096827974301463855716182535391347177424041,
    0.05236288580640747586436671213787271488735155072370759635090579365604665925184183108406851084448501741,
    0.05425112988854549014454337045987560682607683844126338307216329331293692347287604200204559001693837396,
    0.05595081122041231730824068638274734682027103511277180242893279106611515827315473120747332351483360124,
    0.0574371163615678328535826939395064719948328568238966829765094123133674957207039931069756436620748527,
    0.05868968002239420796197417585678776413979564625482831529324370030501256949469432508870608136194731029,
    0.05972034032417405997909929193256185383536304547618997548337220781614998844943523359525724363892845009,
    0.06053945537604586294536026751756542716231236571045707992348704314455474782612776939039442862258388457,
    0.06112850971705304830585903041629271192267855232196093835732202807039013374795503457017042431438312737,
    0.06147118987142531666154413196526417758653796287688502271111168350015170082820303850421797718367403779,
    0.06158081806783293507875982424006455319043693690314080805690899640335836719614223680997661006151150826
  ).finished();

template <typename Scalar>
Array<Scalar, 13, 1> QuadratureKronrod<Scalar>::weightsGauss51 =
  (Array<Scalar, 13, 1>() <<
    0.01139379850102628794790296411323477360332052629290969644894806111618989172973960906684181782842717102,
    0.02635498661503213726190181529529914493596328170332246875536616578387093400891684814138149854375027053,
    0.0409391567013063126556234877116459536608457833641043465046984148992974328800919968311935552123232294,
    0.05490469597583519192593689154047332416010998555311134904850849824459377467845888539049141252749884013,
    0.06803833381235691720718718565670796855470949435463656261507122641000365405186566070996379397525690173,
    0.08014070033500101801323495966911130229022573285367589371620146297361282893473116332055078313982228025,
    0.09102826198296364981149722070289165338099255895933431097048376896701738467819417694252390365233461972,
    0.100535949067050644202206890392685826988466094528141907069869041999412948158992565724828119682555384,
    0.1085196244742636531160939570501166193400775879867220161564943073488392927939336562571379989975418624,
    0.1148582591457116483393255458695558086409361916681801495915149900314827966712048643495837343052561653,
    0.119455763535784772228178126512901047390176701413726425519587881335184090220103338360663564911451351,
    0.1222424429903100416889595189458515058350592475630590409075800822320389672192185203366621242080671437,
    0.1231760537267154512039028730790501424382336275181516653913521973169120079493157622726388674596151102
  ).finished();

template <typename Scalar>
Array<Scalar, 31, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod61 =
  (Array<Scalar, 31, 1>() <<
    0.9994844100504906375713258957058108194688739470185080192363264283074801667488041753947697194996070531,
    0.9968934840746495402716300509186952833408820381177507901080942978023876952101876905911364839742975687,
    0.9916309968704045948586283661094857248505003337461632551001992334980748960326544476645735460360043973,
    0.9836681232797472099700325816056628019403178547097113635171800101511442953645960424126256006244125544,
    0.9731163225011262683746938684237068848876379642834393385375585018562411895818159838760367692068320267,
    0.9600218649683075122168710255817976629303592174039233994856616724249399577070222652021567107148559263,
    0.944374444748559979415831324037439121585643714964980931817489401395209170006621185637972702420575296,
    0.9262000474292743258793242770804740040864745368253290609110371336794229956512907488096477470191127692,
    0.9055733076999077985465225589259583195689753636622284135640476639780376023944413154777982900579026305,
    0.8825605357920526815431164625302255900566891471464842320683260531216162626951495733896366898884356346,
    0.8572052335460610989586585106589438568208001706235961285050455173911988722568662163840316949559787919,
    0.8295657623827683974428981197325019164390686961703416788069529834536565065895225275236471805670318262,
    0.7997278358218390830136689423226832407356984293777845092364734954868666256734847658241997674175335087,
    0.7677774321048261949179773409745031316948836172329084532064943873651585701729176448780301907309349092,
    0.7337900624532268047261711313695276456693817277546854920870139951830001646360894277124171222822389771,
    0.69785049479331579693229238802664006838235380065395465637972284673997672124322238863032411933282911,
    0.6600610641266269613700536681492707530383503748088339095506719733990493749971356548380044404594081616,
    0.6205261829892428611404775564311892992073646928295281325950511701243353149748677163972190598817617606,
    0.5793452358263616917560249321725404959070515888121528920812601661231283356782574069287990639746981291,
    0.5366241481420198992641697933110727941641780069302971054527434829120149086191110292652914964788730464,
    0.4924804678617785749936930612077087956442656409631869702607334098298842254637966941983849063184592585,
    0.4470337695380891767806099003228540001624075938614244097544773817276153517281357494736543627364028779,
    0.4004012548303943925354762115426606336110459329707839598318661065642917068928168030605195299610234179,
    0.3527047255308781134710372070893738606536310080214256265941844689002694162331459179614696126207617254,
    0.3040732022736250773726771071992565535311577898094627284442153699831215044237441952902212708842157167,
    0.2546369261678898464398051298178051078827893033025184261642859750889635315686979716220764413977652301,
    0.2045251166823098914389576710020247095241042645955637744760446502835032189466642061362725583013832169,
    0.1538699136085835469637946727432559204185519712443384617189629829157871485109850511708469147233136852,
    0.1028069379667370301470967513180005924719013329651584055210194691463278825391249657550098696144381624,
    0.05147184255531769583302521316672257374914145366656956425516084398796475521050068425392022492338656622,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 31, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod61 =
  (Array<Scalar, 31, 1>() <<
    0.001389013698677007624551591226759699681048841291963272453441105533230136743585799995230714598161651459,
    0.003890461127099884051267201844515503278515142984886464921420010128114472214109246107711158392298628495,
    0.006630703915931292173319826369750168133628388217781258597395559735783757951092130534943451362834952629,
    0.009273279659517763428441146892024360421270024938193107696495646914362666555580533509085844395251336973,
    0.01182301525349634174223289885325059289626440625060781832630243154826536515595513322526365062110965211,
    0.01436972950704580481245143244358001019584189989500150587356589940300019866207597970916520341341294132,
    0.01692088918905327262757228942032209236856670378383519113988341084054667997864933465506653927249777604,
    0.01941414119394238117340895105012845585142101419143152577027606653649717907868448673722560411734798438,
    0.02182803582160919229716748573833899340150729605683491277363042235872043940375424507077535435835761533,
    0.02419116207808060136568637072523202676039137782818246243222894356294488526767431474930695726190994205,
    0.02650995488233310161060170933507541436651757952274856577086743833847213890328254335166825690989646737,
    0.02875404876504129284397878535433421114467916054207493003510228075913217481536115083408452170820076782,
    0.03090725756238776247288425294309227263527045852380715342684048696402208619077541395032568279302417298,
    0.03298144705748372603181419101685392751059929121385838571451934764145231658244043243814344910774829677,
    0.03497933802806002413749967073146787509722691279481871997220845723217778670155181161809396232953885134,
    0.03688236465182122922391106561713596773695516478103033767000519858419613497001909957468512552529326463,
    0.03867894562472759295034865153228105025092362982155384679037613067933740205616677654207724519908347921,
    0.04037453895153595911199527975246811421612606212603025563399828961381084676091110003363863929294393074,
    0.04196981021516424614714754128596975779008865671899237482038872032385265551160001613502816368828460472,
    0.04345253970135606931683172811707325807460330863170316806488880549573864084002312874666265583124048589,
    0.04481480013316266319235555161672324375743139279637300988968020119406350394739492115172928059027789614,
    0.046059238271006988116271735559373580594692875571824924004732379492293604006228804990891488079055774,
    0.04718554656929915394526147818109948648288480730062845719414186155172553328967931718754543514769794382,
    0.04818586175708712914077949229830459260579923610842980005737335087243379358435294573287548096508457825,
    0.04905543455502977888752816536723817360588740529529656957949071790132821564459344917713247953817538486,
    0.04979568342707420635781156937994232853920960281369610895104739284294848264611513826777546683679926229,
    0.05040592140278234684089308565358502890219701825162223366424395921106671330859270980597846364498981278,
    0.05088179589874960649229747304980469185338491426091923992077194208097254264684042445817750411277733778,
    0.05122154784925877217065628260494420825114695242524632755350905680551101540140052258264678161742239997,
    0.05142612853745902593386287921578125982955203486239598726385582417276158925940564395852149083595539486,
    0.05149472942945156755834043364709930753273688039646416807463732336247408384424916033396107401257517406
  ).finished();

template <typename Scalar>
Array<Scalar, 15, 1> QuadratureKronrod<Scalar>::weightsGauss61 =
  (Array<Scalar, 15, 1>() <<
    0.00796819249616660561546588347467362245048069658715172122948516335692003843336916377293864265159615533,
    0.01846646831109095914230213191204726909620653396818140337129836551458559952114866408437237972038129564,
    0.02878470788332336934971917961129204363958889454628749647418012260814598893963840501890620506123123538,
    0.03879919256962704959680193644634769203320097676639535210773278970594697095273539149316448676615305966,
    0.04840267283059405290293814042280751781527180919737273634519193679180542567708264229945572239497408746,
    0.05749315621761906648172168940205612879712067072176313454871579900323214741004280218754280638145256817,
    0.06597422988218049512812851511596236123744295365666037896703151604214367246605310525550510281038566409,
    0.0737559747377052062682438500221907341537705260370494389412691823745993993148752576022840180815747883,
    0.08075589522942021535469493846052973087589280370843929989025859370605118056710975390244003587667226629,
    0.08689978720108297980238753071512570257675332874354534401222212988215358225410319096858332000482326007,
    0.09212252223778612871763270708761876719691323441823410752767504700197304707007030514542678126994717687,
    0.09636873717464425963946862635180986509640646143016024591299427573283753474219946239397953498420944486,
    0.09959342058679526706278028210356947652986926366670427722136514618394666038978640159858020260101702892,
    0.1017623897484055045964289521685540446327062894871268408642609454196425136051514927095940043517522545,
    0.1028526528935588403412856367054150438683755570649282225863189866760162386567528438249929790081260485
  ).finished();


template <typename Scalar>
Array<Scalar, 36, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod71 =
  (Array<Scalar, 36, 1>() <<
    0.9996192985605878204195350190843104631212234409879369300694968133587900322684572748732201496276404523,
    0.9977065690996002972601631393120947251932746371710133165922977137425191087274999606910359238508905564,
    0.993820293038909212258407522017840285007565493141589192672049888587822255322152355846040687056543744,
    0.9879357644438514980351170891854859853130082957141743547561139575477141904733847046895977436631109212,
    0.9801316578513409880198599036526098881668881664333545148305119089712111800133791657166641131681041391,
    0.9704376160392298332150704825847701425248812393123766074206372200504963195488425143863237491788110358,
    0.9588386969958430789212621942739221753867802538642656183884421468489722475125474554666007421689358697,
    0.945345148207827329538725985529974644862811251247873154111936993097783998889576290467980893577648118,
    0.9300037530507060992250353586406408171737229976553311361222351131007387270601162304332412694116117231,
    0.9128542613593176144649370635557642304880610136255580049297920305309011261244644895130138673122843787,
    0.8939163058390494048241121401326831799516337120861917852750729807033646065811451763566752639716698545,
    0.8732191250252223315232823491413852666443389022793749466348294513237450845612210912976919536419146841,
    0.850813544681091587042032801795712932215625238733601934571917563450605238909998482457753551750704697,
    0.8267498990922254068340506127485575790468906179823073413529692463928350287882587857143381254108026723,
    0.8010672131257057147035818433583782167291546826617817253009238568888407877721120455065104636507694075,
    0.7738102522869125552674230092098874810118100729715459263433991672834461322560814123115089222289783317,
    0.745038975666406771644308176138580885372162007387503026071111586445132819092242205623291168400726538,
    0.7148145015566287832644086312244467469620439685217305119253918434464177998445227607793363496179238088,
    0.6831904184881565767775042720946562724558316216962059705817463134996731783737316626085978550081886942,
    0.6502243646658903886757928089845592633697623259283740012649869237282952127571294667883043872663477618,
    0.615985710487221830539605765737639580604375432826247065048318425137840064126011258525992158566850268,
    0.5805453447497645099345020081896900709320702035643324338922578072100971427566279638542027852220948096,
    0.5439683516962581382062932827577219526741106764878286538236009528599981033486230773212744970816729844,
    0.5063227732414886150242975558373273765860879386363692475310728175119138605102582037276016604387912533,
    0.4676861834615296490223833307107581709964847301713599836134657449197738383643783652402458047665013579,
    0.428137541517814254187620613001479858784718446488533843953971976815848294775496375473862514413149897,
    0.3877506960278423126091683693281254981118511958093630267210860018207552804691840392867416006991662824,
    0.346601554430813945876979834930238231808408769377292108726879885540854967203140640579168161563097188,
    0.304774001471050379619976316560776679435042322918627207468059975895570555895470242692753182678087587,
    0.2623529412092960579708952004555805134863043986457812836582062216031595563860977146147938254563809375,
    0.219418258415018003189060275384259630000635326567569225367528802230531885847713451001543166681462515,
    0.1760510611659895699743036564450599296754297123297570474108880126895428831731850376786092960504465168,
    0.1323392706134166256111420827471922135599272716991016738528178093986660656135573329690723691840390273,
    0.08837134327565926360092943349754880342411743476509814139725086668186612251435061479936001302420972929,
    0.04423040796047631902497910724648175796711437032383331608595881126119312334795152932833194430423121228,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 36, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod71 =
  (Array<Scalar, 36, 1>() <<
    0.001025509110746668010069564372981329136349210307064285858297572722778490673543159472255288069039259284,
    0.002872260014470701881751263465969355597201308839259322338521563899000744721608137038308909609099953646,
    0.004898090890316147091344899953553457196327993894967444423387845828409761075440177990536445117170619038,
    0.006855487218784200134890176710593142692587147756814498123288247040429046089598480089266708775458677777,
    0.008748034767897012267629370171035245886176496330700192120142979168372247214706587614710256605712383343,
    0.01064412676080364548520974626298521833239102927400954710310006683677918860149532155120847367895798845,
    0.01255213863161942856328562549320926369826006957552845499861427117397010924755323802364469402030204931,
    0.01442614862529363429700928603045290106973954647844949494945774739273087071929590341112723130614242055,
    0.01624977199984979251411432365271640468771985708338077583632273169233077521221693552443849484728939111,
    0.01804665112955870366183510500927265777645403257828932489051292862925873740378511722853142988878424977,
    0.01982463073192568430864633416826825982695039151445106503322648450529592682716429271204347438877605253,
    0.02156072900282074084433582290901980023837200422119983579701150562001700353404987864670382110017421903,
    0.0232418108954666350248316623639739740786223247177783964712371703187774264720104147369657381475385778,
    0.02487938986497896142316498112220908754540096768187839369740658470297761332168219614848473509680405526,
    0.02647872983924452154290308599311750111721575798899054367715494613708239968046066049479158975587602663,
    0.02802485927048032502869308406000651692913135080710661824538979809219394081411629605085478779297016324,
    0.02950731294048380503159847508360512949719541602422505316182562801700534716094339875588283922101827715,
    0.03093298569089254124584577413599566869200123205646528699937761481180295687486947874410889407286536586,
    0.0323057496748603256180147440938778927390722694648690549919775506399415444319592514358804431373358892,
    0.03361454962779494244108331458137284946324198895395056527709748070773949469502244478877615780679410491,
    0.03485077628981657862883631795167583760136994493589784637050087842343296036144452644903778371643004753,
    0.03601932106443251160286472895539991131861935891998680573436048784459625759563688791974384904636733262,
    0.03712347803674947651991054179868437562892996972234544350271687144381365816684864099533610443888059225,
    0.03815455393845179802844670519848738586957355006793740124814790099100618169762784405936714345290682836,
    0.03910531516466664309273221987791124541581708553488867959595571264951119448544864940334963100441461705,
    0.03997983486093488779275160637760618088208667334682377581042378799731273362885570340234391803483831726,
    0.04078134475859293797125394533241037525076355046501712935169403118002890633153007781745891192223903166,
    0.04150279114110496636106397836894150439113925391415168841407575895217359305541498846141490969766637533,
    0.04213802289742381614517983543503522074367479896450297364918319619029399651986878840811853050439687884,
    0.04269093484449388936791278778195848585871259590150164224849363710059240143395669778519228920996231755,
    0.04316504612011059575016094844755100917095935153617892293558503055011870398752446092977701735165525006,
    0.04355454541697310298508166546078403157623950944931542662319976172020520788753143681010482574005868161,
    0.04385415492459730857308029613026789252900261518504184232124716683522523720964451121927932845159219373,
    0.04406798346693598707683395305061859923249071421063371292100191122205681263617496751127032629189866763,
    0.04420009752589896947154443219235054970162309288893512358104158708051321614043658611095171143591663885,
    0.04424566572105622843217879601220347725717507881492686339804312376445062818083545881238135963765416374
  ).finished();

template <typename Scalar>
Array<Scalar, 18, 1> QuadratureKronrod<Scalar>::weightsGauss71 =
  (Array<Scalar, 18, 1>() <<
    0.005883433420443084975753896240112624030754317798232973711684204519883189505519763820820847635117156781,
    0.01365082834836149226640400292051638397399403784142492099719009988256448974523779924332618922489254614,
    0.02132297991148358088343798396620507832380964471993620726489845562559719431910125714647667075416120493,
    0.02882926010889425404871603971448491626152772662959499974747374084211656712270784030760107448385833565,
    0.03611011586346338053271696964754993830853577896998694316678639524243320554137017434024662346057116042,
    0.04310842232617021878230645937490820342280658716399020871006291908060781914140208494256788464871301388,
    0.04976937040135352980519967608499495859449495319457316369573066436191541365761684258185153999134300482,
    0.05604081621237012857832774716510096444034853490455634554970528511503581623157920789657249976527188784,
    0.06187367196608018888701413878868865226537122580409643507340429175296948673417807192494361317574618906,
    0.06722228526908690396430550874814855854709311914960480846055927495170417464152782726737897308755324698,
    0.07204479477256006466546190978527775614726739302742726056329682156206092580616576189091031283955635392,
    0.07630345715544205353865853788422622552708008189563653436772884519687454098568744844505509046922379641,
    0.07996494224232426293266208098504575632883549943008884738043654410797916518356119106384533861300936489,
    0.08300059372885658837992652821617700348517450381345111995528884968722505115103484630848042939451326019,
    0.08538665339209912522594398739111756764119098828375075112053146186876541127341452670750126811827954404,
    0.08710444699718353424332203160554093668505671509385493140445383422179678866141986092462150478649647327,
    0.0881405304302754629707388075930966414254543172744908371705717846022291674575799700054543672219518024,
    0.08848679490710429063820738777761566918240915001060542332039305475648318568178403347774053042322519035
  ).finished();

template <typename Scalar>
Array<Scalar, 41, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod81 =
  (Array<Scalar, 41, 1>() <<
    0.9997075592587000165212245421359747135825954661143410379286172156355006787676935640113076225219833272,
    0.9982377097105592003496227024205864923357703815950459066033361170968388630200600727785434544562803523,
    0.9952505734460727503656095401672364039613507852014369306567866680886873137017435985707020196931690179,
    0.9907262386994570064530543522213721549622220813510865378830762443040789032388040937059542123297699134,
    0.9847228398642500610293334148833128195681041642099554992783549043646120443373615484879588706265050679,
    0.9772599499837742626633702837129038069786679320379860964292620160110632144445568199942906698242548091,
    0.9683231268541499009037674880220805392922622529546031628800709935391009799704513116195502647928421633,
    0.9579168192137916558045409994527592850948834906027470315690538435817583556240528090011862194247618801,
    0.9460718371625000382018348083531018336444904902723308308445722149705019724084873955630453011785611624,
    0.9328128082786765333608521668452057164347535752826924492293430154156405239236584754363900644466620051,
    0.9181495430728988768290910926489990090088956533611221890351829281123207506377196139205151765654572928,
    0.9020988069688742967282533308684931035844880810576694677252601115403701814011922660804488183039085468,
    0.8846920087010897459691673156848161524774498856717181683895124343692603161277387906075822427452734219,
    0.8659595032122595038207818083546199635705465530111016494599402548066820788472097369117138151897454183,
    0.8459239855873107174207527017606315332724235590501110361508741052352764387393308841560487248198126742,
    0.8246122308333116631963202306660987739072403842429877996917909631528071718423925956249044054008198338,
    0.8020605661402521271654824805230670051342684061444176198750005675226880631652405458539359586860837791,
    0.7783056514265193876949715455064948480206913161268917942453420606293119419164039728527570134404818472,
    0.7533798034389421981719521086138979273121145276794061071466531713516645019740445795359717348814319862,
    0.7273182551899271032809964517549305485573786735333281375475512441859291146459731302023908099241022118,
    0.7001629774873299310306782124344381079474575280677360791062389332480601728962059346961500528659656702,
    0.6719566846141795483793545149614941099703259813838511500710929689866624759564209317330742454238478261,
    0.642739524305579962537243991643824580784306531873256575523551972315095512941452956156515141535965357,
    0.6125538896679802379526124502306948773801237816831496111353475625301909724243427305524657292466983367,
    0.58144706582913000652989501202985449166039158983665261813405878927362996383290411541293596459805006,
    0.5494671250951282020759313055295179702339751015956514649025654717218557451132793061529754643403655165,
    0.5166606073863837059773675235268673066985025517896156246283544691511959710040525120223524528920057372,
    0.4830758016861787129085665742448230045990223955331141007893352432259434427419703875464959698696476707,
    0.448764513638163763915231133546000618464974477445029348401585530978641138382669824635890949901712137,
    0.4137792043716050015248797458037136829740996240529182382944022510686426636091159845221174495126144505,
    0.3781714354735889245684707420426703655474998441476825195477394736885391385980582546128857892204400078,
    0.3419940908257584730074924811791943100669536200273257964634095840981437089420451643936025821928803707,
    0.3053024417352467195394549972603791514977802339362744887246547841673697242501714052236066236215734446,
    0.2681521850072536811411843448085961834248043732362469814572599748738211931940072097395478925520602144,
    0.2305985218807194970043610362767274818556709433431691326522818934516426282345875586746772040072021099,
    0.1926975807013710997155168520651498948140920211052088748854675922365027216636879916717314820423911987,
    0.1545068793793944770927299658245506088826655731207631088933331692310314511651463942921366516053218376,
    0.1160840706752552084834512844080241137687285308542159490302974321615791639479761107701957455751873412,
    0.07748658833128284169115486612617194705087430189926057113425752369437396526963867701380735338083694813,
    0.03877241750605082193319344402462329467936463438314159916863718143800657500080622284482690791912040109,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 41, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod81 =
  (Array<Scalar, 41, 1>() <<
    0.0007878633238943714987202715548968673164643811254294629520381530097517265373503229002911722020895816751,
    0.002207485735726777962168809225311211475394479216776373668751820081014216766098222087506549968207216442,
    0.003765228679341922074194372776888522481747191047118074065164668172416491000054067058393809891630897968,
    0.005271942714885473911009114007496104017952963252309202762502812008909154468197780563879583713236238048,
    0.006731813485207399963420793251972877317817809361635895157602439771216629900179236838049331152858466065,
    0.00819757638675148244956105325366150439252190701325388285440834406510352363422619742764162252609728092,
    0.009675401484017187915035491712985747691067693138631044487115251282487635917552869795503048706839469233,
    0.0111313216640275037493861662373344934482403510330584361922597871347300133578152736008041187829881265,
    0.01255438476851726603177494941601931549647320859677815018243937362683076673510095164331649509171882095,
    0.01396255986698061404257329276730788872218488725170942931148992715666254574505038566663185440451501826,
    0.01536132635910245297306719365346221049653776351247420492638001430436904317202485967815896126507352159,
    0.01673453247500258319616665389692844862618082103790984069630190212272089994268643210377019322049250632,
    0.01807386840881819058019116416727673799123477315931463443471169319293702122600474639708262397390676194,
    0.01938764589431774100483071215654747790839959650200042443937813133139365848888890360570389077971622459,
    0.02067904327352817531538698511576519576908963214655876053202191131530640977741039090845438177154785438,
    0.02193818733583309346140081267327422472167322967376679522054194263489984465593600660285718792099348899,
    0.0231589310133770241444154263165729142691613836368524151615116266698755500603142427377892022198310607,
    0.02434569018227335927008045325065084644250141492898465815360031047902235794590026071589225354191082165,
    0.02550021760313012760411536558132073210208609486171496094256085616650537284947961521727019424728723221,
    0.026615737499024686758584061586931422289917915773450769202755309145761155889198469208846782547963006,
    0.02768762611106109151543416219022982991880587861248610845192015495372234911080623936871716174691510854,
    0.02871838684109212328774430242495038364855427947405841818362166957634325566382164830924457415377876378,
    0.02970892727777659464157767791486382641598503632608159254060687136425229728222881501215867527340664579,
    0.03065436089141152537823603492997426208913617114202061553739284653388942036274142588460077543261234785,
    0.03155122361911536248171493595674374505113742718348471211799335749213764179593185602565308649578990695,
    0.03240098250760594428516927456513374062015435029681831621766962379356821161601904169406094903086164301,
    0.03320404434125756040053598377665629314697494328677152246747622947530904118560596089606097608334992145,
    0.03395686283420980625135217300229063782965844230292942412609925076543191583650997239291323305430660219,
    0.03465693584349753394613505048683965340397811449697902241604245218889183171723442385924161593130351703,
    0.03530514470862184103888891975079794872037448391518329965890061031312428458006861725760032005260262229,
    0.03590160278362810442749426164234802328728310552019942962070971317260219281493984470234099913315820175,
    0.03644382653034092475806451684526800902468673825359483710351489041803249883519255743942304523510125493,
    0.03693016953404855460457701491128601575795938601292411116027932265414277672169173057795834255179336308,
    0.03736118002546921808817250104671655660126038378353802058268221865783788595287669795431795734668622687,
    0.0377368012630935441525723796917112867615992792023049951862002477109754129333855340563899234693139493,
    0.0380554637788524209907298035454070976526997000846136836624096585578747180636552737820040478567584164,
    0.03831632400517485967847680297981699802520907959292416581543540542780845640797800552035126024624503114,
    0.03851974174995072693620904485019618182205811434105600132185495386768997172848566045757989376801920609,
    0.03866555543914104039741924425967757530593426930461370622690786379986425047340440136802260120751254856,
    0.03875302937875238614021147436365714157701740560300197253909431668245844036620375687503054973775062655,
    0.03878210476428280538640259652566010072577182998937725943930413784425825696390116377075453199529668897
  ).finished();

template <typename Scalar>
Array<Scalar, 20, 1> QuadratureKronrod<Scalar>::weightsGauss81 =
  (Array<Scalar, 20, 1>() <<
    0.004521277098533191258471732878185332727831110199705990700341942342663947001875291151371365801640714396,
    0.01049828453115281361474217106727965237679262131579677971567512361162529889709060942581897862714867816,
    0.01642105838190788871286348488236392729234229334695776197190391551359043930147629078467917180895279636,
    0.02224584919416695726150432418420857320703319667935442788073424000569131152015499698100912951019977327,
    0.02793700698002340109848915750772107730255086205076639844808591645037489948132154577416510299675154128,
    0.03346019528254784739267818308641084897724178665376435041319117669905239977107144511432940768098618316,
    0.03878216797447201763997203129044616225345921123202585783726688891953873014357714203482878645303338303,
    0.04387090818567327199167468604171549581100683717023688975852590864980178580635975686483302495028578858,
    0.04869580763507223206143416044814638806784302737711977514064605127517842841744464185513718982285287561,
    0.05322784698393682435499647977226050455532117182200645076436088052652081502195268541712912130232013342,
    0.05743976909939155136661773091042598560010483585445362650668126692554836171123051137362238693475894145,
    0.06130624249292893916653799640839859590259376351117432198689763868686815582303381438649338182969394808,
    0.06480401345660103807455452956675273003269296420848890636319524427128397292563764515685376464430557599,
    0.0679120458152339038256901082319239859841972383792859547178962035930407816271350762043993019199381626,
    0.07061164739128677969548363085528683235955910399558609731068426896266369731180826106444974765124030418,
    0.07288658239580405906051068344251783585755908098579863047625481683299055573094539340000786145910945067,
    0.07472316905796826420018933626132467319120293442035982173134089141765340303257744417458600362986272363,
    0.07611036190062624237155807592249482301255955384507110705418245902929924063579544887211922916233695382,
    0.07703981816424796558830753428381024852443975416394041548918089243254164309049167114582791853755813568,
    0.0775059479784248112637239629583263269636686527881064357329542738540721327490108830089819907282149203
  ).finished();

template <typename Scalar>
Array<Scalar, 46, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod91 =
  (Array<Scalar, 46, 1>() <<
    0.9997682581981284418405050180852158476177822218950872620700173615524319569942372269276252614303155415,
    0.9986036451819366381565476769008205480922885272144754168889563981367847211485476133838310949369924953,
    0.9962364840026204293451187322006906746497789252115204679448785180028040913857435303883016900631935947,
    0.992649998447203741748617120597735344975001643303639350616987928300824197100152466025846229626126364,
    0.9878892975583419803584513571282678743646914887969562992477676052484480360774968002093954465163694724,
    0.9819687150345405682393184736343414815383652492204618079868921500029724836097017409250717024730823004,
    0.974874728599846262830112472376266607540747301163405056740228144703597747495524489446749417607485806,
    0.9666083103968946047364251608924780971166790306094154138679748851723561843838013022760666550868971868,
    0.9571916240132814263270907118608598025441286826059822625434201868440558397106576911871415487077367526,
    0.9466416909956290617847205969538370784504683441671350507978556031137307029228341059250367111756500133,
    0.9349627017082307284972098552538909977243474983961147151952928390338286832215045805364090067351815223,
    0.9221639367190003880974673609605273192653628772506611683508265894926601661290231837837262216527076459,
    0.9082668076834639697360506838224180859043786833798733359479227620478788276185519741379960879343789147,
    0.8932916717532417384646490514930573463654012404137926861627111094546732026207572466262877318841634932,
    0.877251587193022012129728411489893572436127898499542871294558730895474468222892242485461798566977554,
    0.8601624759606642253390788705671343877834144235770221010785934925389017601088352833646003516035953309,
    0.8420485769104069582297548405764733689443124426574513355351605050663066024740911364223298971049669278,
    0.8229342205020863370357752600265020299934152580562704335440417311716948259072974563536773254287843081,
    0.802838951166836774648791034086906076175413699426429643187435267071397820418208556414077438197965395,
    0.7817843125939062913123631880986028176602735168390615230392883982766534387426184835912751824817454021,
    0.7597981645204108933191171745559524031593481201163608661524469267954021252896135438347083535595607,
    0.7369088489454903526237388485948920198796056808376170809273433989347605729657168739807106626929205689,
    0.713141224275491741860736759319643407795614253724652556852884260318793619478422390474203406322904055,
    0.6885216807712005252320198258804382359552330056185277807209471116734570392909051946899044562050770335,
    0.6630817086022337980835232637632603294816253424968677681353883056942262790381945725391161361876860069,
    0.6368533944532233592712238459033831506920312434656764405428486287619828567532614286341051129791180483,
    0.6098660544938957089438198680823058401103864949149837163072726291552203990997964865924451029516859769,
    0.5821502125693531866809673344441771310000888259832271460235860277659144569396469942112638497979449017,
    0.5537406721593487633231289014900788341794266803981009874605482967754197755217527694132929976200026353,
    0.5246728204629160670911341004601624026071082708002825868908554657683174564282432812971849393355991412,
    0.4949796574981018370299319204102766037291958602808883578761563474281263941586737738298566078007691436,
    0.4646951239196350985796015023097485108398126672371908828472463800255064368344214591667776533695720961,
    0.4338568437417829443216644742818128999475517335128138241104386314849502126215287521735232355815841399,
    0.4025029438585419140779745085483464559702993575693964388358576801340751950507763325509511435165562492,
    0.3706693423597306189532296408558525459383619164298094154656617925942128078258074568721511304673771321,
    0.3383926542506021616434041000318729895323414431374226979475929834877354489797216070932212246359447306,
    0.3057127218662330432585853442781413194085783994006943787713825182728390796086508209070299699992555852,
    0.2726697697523775606087653916156451818982117542766420601215071691763979428712867268492628605182368633,
    0.2393018532047122417906413040485989696257865867548623220667217030769397001737656254566290505535098387,
    0.2056474897832637457197872254715439307032363856994298310412338136791074555482516314271943100811849802,
    0.1717480659497809096531343654184981521808338526923386679268694476028351735889817189704568609653955235,
    0.1376452059832530287565900414230655531067655565415250596178900299271767572119405594777530163191527793,
    0.1033783028321454046727667361505741754807459031525865176875137958183194094656592607020148535310609814,
    0.06898698016314417249041461410381172969392066693096968266540925528852889248985177950705140139368683005,
    0.03451344875177766949491534277959965665394030693584865216598576663230825981308974290168335159030354077,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 46, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod91 =
  (Array<Scalar, 46, 1>() <<
    0.000624291857183215798576630660596629180121690217122191872890990837105705043440542756595409416204102332,
    0.001749096517485352812855161871730854510606022941847854755402314718802275024953603057817803087333061033,
    0.00298417191546646641998503281623961554312494201463159321197311796862140495375919787323834590846867397,
    0.004179842532665094022290004961017111635856698890598529072263416002769742672572288540680712012862481504,
    0.005339327418080911231590626114976032099764042633961225126487852999953977268019076638367330560933059227,
    0.006505054713816962459046116336722988457148020061403422251037020551226804384292393079277076304257406954,
    0.007682833184321492093855114361401062236665627950194775612077189486863515897992486963050078079885138689,
    0.008845696777300516241068152342085034325360981501535961031416653410782098806275661156951461492030927851,
    0.009984696720959432723079541454179037696669780429703883592104063191451073402196783526110127554249033422,
    0.01111490008447190508121416984333781971203603824679739741281625587939944377810476241004622588545430829,
    0.01224167381140228811054606558412293322915204182019595282841825456212209906647644462400831742881312278,
    0.01335197006885853998622059924442501930963026478305936145198586476866191602883737801395670488630239809,
    0.01443876216592827376541528869012420064884302430462473751452289305244940207572701498592862517810038233,
    0.0155095798910578208509841385380503587232139200160298926224357329561900135438511713384296638598301945,
    0.01656805497063899757282455227144833435996323736844586894680942856672230282327832887173485272845512212,
    0.01760592823349179892606175575954299643495333036010039627976376985693722023963111522180468990863997844,
    0.01861770602562484479718322571024115120208025395209770505380055490767807293970656498534424841703365418,
    0.01960791451368152118747566973260204511490037731485536671503510464175553629698551260311626760029789747,
    0.02057913131743379223158230090375461301131538208474606892777068350909789194250457031506424415374436214,
    0.02152536104976848200630137341864843337072862418308214834889543398460597393501678908971139781193584387,
    0.02244212099311634372269863847029007990818455855579542551226240546350839673862765280459840899418004522,
    0.02333248915075203001289733158912301176791164139546673718017454245404087014597191351598645917769951092,
    0.02419844417232129113332510712740896880597195801618662001434998166233103749820258246081072265499234192,
    0.02503528547727422745626205933879306013580656266019056525558345962302531222786860553063893567837730472,
    0.02583923328997513115912223308380120472230411615959829492870424059918490888216860012208044851742481149,
    0.02661260570454035168063547182183051788811540169957650716431917847486669512819063910351693643841724564,
    0.02735705869931106756998238581749345123775004557502957094154141281680484350822698343259695848015073467,
    0.02806873537773934426971004212203570044889225018606739742433195623281761417725055558450933351368955382,
    0.02874437835191346477732940766106574336017984206002483103811668897936754248327337194489515192672464769,
    0.02938590583816742107250843684941804435493284536361294781257330059231665833733477045843212492048252441,
    0.02999482799045285292199349638404121450838986974628108671877514238414999436550195911199216131349458312,
    0.03056789199447173972249252053845442669853092956157127207781864330830989367226979461532723586820447064,
    0.03110225031086367084980881406978430961362268833060614911502297685945858247206560071791792761667507305,
    0.03159963354172971455344564253125185922453333794126576512769773326097030701579489281566400288653739157,
    0.03206152703486851892940119666539450559009394304134335102626220039102521341269892251657534610469384267,
    0.03248514058861336432416886222383084559924471982829569403425823579581051384064138827576171963112122355,
    0.03286795999547159469562119073429122583191588601915669183094279017901210789353915197199991575400513134,
    0.03321166534480586792126042755694344444575877149099790120599426578662347728612210906953442248269371872,
    0.03351780561085007806314526562438369890686100054127300685689711473182696530587896003180731010872522288,
    0.03378396062701886695872739048248957350422138863592592617258980701767892253578176321990802304363707674,
    0.03400789127506731448126888746030257764555957519386313371822161701756885370905975660627561649030565069,
    0.03419132258692411201484025624573949944920924709689795140121229146614272779887917867795624818704304406,
    0.03433593627332217900296412964336557875142219514127444878244412716537061573490973888082472039020471664,
    0.03443961425268577159747120385314938034943289238763708120798683981258752095203248202544191294170411845,
    0.03450034175251302542891776315122965078611807559510667628602407419894100280878730447996582236839516631,
    0.03451995999118589472369263667768431132580391340384126907597675574612590389055949834309688435315857748
  ).finished();

template <typename Scalar>
Array<Scalar, 23, 1> QuadratureKronrod<Scalar>::weightsGauss91 =
  (Array<Scalar, 23, 1>() <<
    0.003582663155283558931143028659351392570585636358183944614043812970337282458208189843584883415646608342,
    0.008323189296218241645735853122233853756157931292948221894956479215855744407091296600525600021678915301,
    0.01303110499158278432063108246968692602714117158263899114091066650151719357549230669612426242811539865,
    0.01767753525793759061709254666957708852065127812646578801736417339579141934571216333315873327021038298,
    0.02223984755057873239395075855216899334487570870129997071960988624487377466384426462588610864444011411,
    0.02669621396757766480567477879310752778782491056589152356853644981431206617842467599457197895748761979,
    0.03102537493451546716250793889376806388592115212397480044185417175054066043370969519044400817793855995,
    0.03520669220160901624769979826157509081008807471271464134077435327527104271430277930188670482687457397,
    0.0392202367293024475641871853439293382181301245963066698072278715168806788767301267259876859678303889,
    0.04304688070916497115169111308116694178831923616319132015431680713677642391916749311915359290957583789,
    0.04666838771837336526776847574165410120498614148785358251276678547986295747161777496516198704745181704,
    0.05006749923795202979913210247487431739149869293514643723048218857431636066183450468047208384484544011,
    0.05322801673126895194590404401931040379848221694017551596604825362168980249422848157421130533661507872,
    0.05613487875978647664392394037486976324148018494616301580044509125307115901861937329604958255920313944,
    0.05877423271884173857436151763183142253126572546098020811657592611954254351966430767740673675974613918,
    0.06113350083106652250188637053632557326012423426524212007350864262577336320361594377663703121196958283,
    0.0632014400738199377499637302906668818663002372758228170208586335941450526732672881496807554933938208,
    0.0649681957507234308538265703590756950838497254875832730520237549913527478431928306817415958038862372,
    0.06642534844984252808291471563910373761317454675067481595603892552331090241940181521057858911674633074,
    0.06756595416360753627091022387364863097947258092394646199345358731424360138397791524690220324032105533,
    0.06838457737866967453169209933431609707348491305464494638088944561495320849146020700717174520601878557,
    0.06887731697766132288200284829805578888452413011064854515874106838508300324128041962712382793406228601,
    0.06904182482923202011079855515940474072332289227500477807714605016099802200977111594498102268047577483
  ).finished();

template <typename Scalar>
Array<Scalar, 51, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod101 =
  (Array<Scalar, 51, 1>() <<
    0.9998119013643647189875276419197977849090071478642759395399325132605498910014432519083531003072526085,
    0.9988664044200710501854594449742185059962435129040785251770386176575391083083180355926265133155150013,
    0.9969443870188761783055252128455157407454265687460190350054542056124831163227227943830068853845386597,
    0.9940319694320907125851082004206947281574779710683235903365247891159333102444595300035171851622927916,
    0.9901650106696800094239266365815957513287767413347695519990635469001910911197059577491808836532456386,
    0.9853540840480058823090096256324894040155926309454058087178092210085350814704608767708019859016910197,
    0.9795872967607694293899342854774689911734104581756990055732588502569172034047563830239048043961186819,
    0.9728643851066920737133441046062520536691734070499542017450962752256767189854882711221144117939132869,
    0.9652016510661452004920914171912959362754950797839359416725148484828928501966988686190908881208754441,
    0.9566109552428079429977456441566220940514341246260465428559790829730553062966927871770370157500057535,
    0.9470940342449394437633588783353344131643672175367646479152995677337140121932148337674925494968577904,
    0.9366566189448779337808749472724966021537315980952029223750542738093561312346526463937224289411093645,
    0.925313546474801886217295012185978961708370098903386860286061488285489008467149366622631774829515833,
    0.9130785566557918930897356427716570947841881916977823896227265532008524340108482994932575425337891896,
    0.8999598875642946178933512159425376034212549750387194862608158695878578405500353301081782236181697034,
    0.8859679795236130486375409824667536341942903107558083624465571396548873258370477048381546261286166976,
    0.8711191982041003104111663127679473476941009915568430311146571159140289938232171443131797719114155866,
    0.85542976942994608461136264393475746765483303948690596343832992034131863007148514999265845831771209,
    0.8389125869672243958266945311598217162967942335427300596812719357435667037750338808926565912436377163,
    0.821582070859335948356254110873939537760741383343485748523374460615468665606090217994372271427198968,
    0.8034568680504594110458313234433986846819564252096605524502420208403872930105738108521678344774953656,
    0.784555832900399263905305196340991200847316272556444352738859121893131020394224586116376855921683773,
    0.7648956793723515225521339100940533206641720342669541236150250331842147121653920850591504265521755442,
    0.7444943022260685382605362526821942428701879313295845785247791479329297913087487675021602127945099034,
    0.7233727660225925157922194115651730705301492841882166191384611098810865946268923448509258211942127349,
    0.7015524687068222510895462578836557281497192284846956427409243790332922458343131538963211909787232027,
    0.6790533894067472714775057462352894554256860084267346222344195796357924948108740435884805187280141132,
    0.6558964656854393607816248640036798190414105283823318265309345913921084785804963882184463671021702113,
    0.6321050684450648764522644416531749456265541902185896332965326641221102874060655998001502816161346182,
    0.6077029271849502391803817963918328936042050206759943557121311889396856476831520013387318774451425421,
    0.5827128178178365323005934192860486880107859180728990480667727152231891762618203822223194523003799818,
    0.557158304514650054315522909625801607815898382237750261316461486760489452188504696321713154999890462,
    0.5310648245227081395687144436535272928415703225742514786738189299926497990875993133934855506859667441,
    0.5044581449074642016514591318491411926353786782706792381827392109682263786940595667345846131059268816,
    0.4773633922330430362023884111334879300760644503965917352535873836431682413577256878153117723315371623,
    0.4498063349740387891471314677783758173150645134651736659414806698859708536992843686172539278217321142,
    0.4218141573106130970286963976729900111034339087916585344730356404636163221186773367834296317840611736,
    0.3934143118975651273942292538238172702461394686726560030790366208564977281245021795851597782883651762,
    0.364633828861614277214850918755173387795311256407376417360260817974812927480678714198394583297050048,
    0.33550024541943735683698825729107169784121859303679576190043053971098619482518966204464418384876483,
    0.3060421192291846090835232245823826749136476124080814436567291403554118205756160176161132563724071911,
    0.2762881937795319903276452785211301857148015871319961506135055794383769236194767262491123167718151168,
    0.2462669473981440259784123306068190622544587678427195362277315474805603969722772396169407596868007975,
    0.2160072368760417568472845326171013337057559725101332727036211263619901938351134869825408862857509527,
    0.1855385817227727727002858801589329808144086104505985107337356393398174463863313428145508574566342325,
    0.1548905899981459020716286209411095012018502200549376323967303263535578248322474234775795704318589865,
    0.1240927243591603717830011356721600907814317225976925669426133871743633038570426379399593170829946738,
    0.09317470156008614085445037763960034788567138392213861468288915564618025166738845536587353878390598987,
    0.06216656481941616908016236906249366229724267742776732835095960529179322137630327391785503345172487999,
    0.03109833832718887611232898966594919424729622295999804297479623566203052396085303047711388904017989704,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 51, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod101 =
  (Array<Scalar, 51, 1>() <<
    0.0005067616680348913680032300567941887518287937656261181852345810781991972840225265018164687200879213681,
    0.001420110238166357058489241609104819346526452454108725569032479703378026437137844270930052452943039064,
    0.002423103745820573271868019959701432756165290775276797004673510949979589113959440800183758778493280208,
    0.003394590892897237430856627279828357746479027398132362821963391071909686672794267932174129788105856361,
    0.004337703605263735783543423606252919621277687488883893843491869123713073369429612719236876712620104482,
    0.00528690708431070081496631090522651841927406286998431828271344491472204049496538860985538409158977793,
    0.006246761652893468805278461192943628793665751108221243523875304779327339805370281694197508886820635416,
    0.007195855913758331771047709011573972466545797686092841306804817959874794253172265240510309162228033176,
    0.008127533662559387378680372942459569872466998447717032594804461601388631879542018537022181502252514988,
    0.009053906853132000734829846383186709740264782575344999794572640381391696834604201563963875990050044908,
    0.009979080512771972715200068965554913528356231567843305569446094148266096909372787971094897752716622563,
    0.01089303114914542139185373632048379056944269951885415881024967621648980508129492573033987359122420345,
    0.01179073210054285467626745948807510643296154432319876753679226680773331017257523313722627507573728654,
    0.01267806183701224440357173722638836784313869359541491696367005031111201636807639870355678182234954395,
    0.01355761601155914093045815780333977992202586708240451617521672647990327344696321381528509995587278324,
    0.0144233248722895469087360587369902775880346083937005294315257128790687232623322729378905249493070513,
    0.01527146381217306258703163983580949905342101469485284105680211161981838775677940658168031477304639428,
    0.01610536347829330632879586448333389813140260935888097139337955808799287868504420493317432580661212848,
    0.016926657875738541082113555463923612005328412070899330903002991340898305306280199644741958226614796,
    0.01773116846670068736945143328713021401556189039555155836607666037977584605243183486128340289478860563,
    0.01851604246177747374224081714934718333316987698583246179201915068120101086077849044087281736547293836,
    0.01928332352180814825301889801162132421117243231649661839549370603262930946116072395432964546826437282,
    0.02003404583071943486093518979257578870512514064792973084809333592815326326655381449344621781423217923,
    0.02076512847171916224208023972166701446741771437993374219785297066296310821431378283141071564686452641,
    0.02147433820180993345171927343976448497995531229818050451037974570941997082871616773537118846032511503,
    0.02216298492660156610684349832667521094279850151823575110100742542838774142179723833924490741837041908,
    0.02283171756887400699163339995992033749214277945417618811061149966135928243102768645497039474812075387,
    0.02347818407891019300458609050334622304513636748515916674428728527926709073900314956706337688772782378,
    0.02410062587721830597666576014469811068703941778002949987664235614938611781121610012215333800648559561,
    0.02469990353732573949476020971483749324030400159066526376538672446188914626778298923643012469200916072,
    0.02527641257483270914647897860737446154499106952105603597709890670698111265266243073263906485999694524,
    0.02582833680912179520884486377406142381526019962380452071394017746735368456941634713925547291113751652,
    0.02635430681869013845472576260957721404783898088645549918723914239901646438942755760864436667910539085,
    0.02685489636290659736893714711520551156209704917335674436067266853449909363916351074292534327272310583,
    0.0273303318901096438330540435054417324556244859510966469264754216507792528650212967565604808919214759,
    0.02777922389243983336140685575895975209594524979909035753452856817632766313407730991190391520459288162,
    0.0282005405794786791462986018774619336477609015429942818332478380794473708106081527118215220569342486,
    0.02859466838340605773904731791010499100505911124158348134557264909764494704224566726379019529261606966,
    0.02896171979050103356757141731956685768195060652064930553041351936760693748294587808367652437982204699,
    0.02930066703511978233684077865154509911023252219986385927661387556254618615908518963800501960283060268,
    0.02961078494045995503025213539965659277620209307432647384393751654396695414543599635779154933103096688,
    0.02989233581703979245880464830873980542938987086275344443396695343127134576224867230843850513777064941,
    0.03014535377457083519407513020913017271701705074417818690518680651576101697900217267806572802099824011,
    0.03036913320016487318137849566585392442983158643625584232513181713391027589597466700235139261945350967,
    0.03056323770631003720546053583408408633745212487948366932887511676482798794747767802365102150332747254,
    0.0307278456694166902059343701658119524062526741304768718665472138714601372504853075385840714703646293,
    0.03086293412170997376026432332960616247053522064299515850556736229051215200750456414371941463058423626,
    0.03096809562366843795854210956298413399486076114109086896939523834154486734158286096733671769145459749,
    0.03104317399694570106876064569864783540375985841535439807276130023266567751633567428201329609968142897,
    0.03108828778240521910421818490634306613818955150863588124276519939900610894747765070099091891397541997,
    0.03110336664174957546715464493457708644263854335374063068992031720654400594649830132155227665154923447
  ).finished();

template <typename Scalar>
Array<Scalar, 25, 1> QuadratureKronrod<Scalar>::weightsGauss101 =
  (Array<Scalar, 25, 1>() <<
    0.002908622553155140958400724342855480806672996459946320618593527283550771039864495510494360640910925373,
    0.00675979919574540150277887817798503180187383240646681055287870585540299679462847173074972530874460002,
    0.01059054838365096926356968149924102233940181908645912945633471714564916062891114768029809018075949489,
    0.01438082276148557441937890892732434993703178617058789277210162215425173656314907569511747470865513418,
    0.01811556071348939035125994342235461984466731704973403542645291587336228972286587085797613406010882762,
    0.02178024317012479298159206906269034122731346235793429604402713944767083022230339401109334205124676349,
    0.02536067357001239044019487838544272346016125997571213733939633295203775774718000150702004743374881681,
    0.02884299358053519802990637311323243251784686559353745783571262305626532966411371030837983279359903047,
    0.03221372822357801664816582732300395344858905883342521715832960541591130024550657445170169587780717232,
    0.03545983561514615416073461100097579709696000049698447091287045085997116653060147471272216812528997252,
    0.0385687566125876752447701502363859348647717050005189265108074001522667532497191210784975341313971308,
    0.04152846309014769742241197896406701780897797548584099007703697795218528100663448157132614809660239833,
    0.04432750433880327549202228683039419746076129835545316566323190682762272947129224581570042852720145307,
    0.04695505130394843296563301363498768251406430618605272996580427934336506071997068387708373238883304183,
    0.04940093844946631492124358075143272869228705096661312479212356024806984570592107070900092506891701729,
    0.05165570306958113848990529584009527964982544939543964509953318645119217730846497316424073366822052972,
    0.05371062188899624652345879725566455276802321352992215304589999918159651617607310648658239107055689513,
    0.05555774480621251762356742561226949759513529998390267581717277851031855071454470736248500638151466053,
    0.05718992564772838372302931506599316301157537225709175493685378135280492566645452643592649342443131408,
    0.05860084981322244583512243663084846620976751344402547331325034247535448005078673777684952180132310211,
    0.05978505870426545750957640531258523079666604207266900458524197880361922141441124970523743118214862538,
    0.06073797084177021603175001538481100160979927323540353572319677456175957651696701009686883762248188536,
    0.06145589959031666375640678608391537509726757576400751430922405035905910995229911797159529334146524742,
    0.06193606742068324338408750978083068857287705669124490494275970611695482128681080204989295629514021427,
    0.06217661665534726232103310736061343086768246920102663310116563761975761160055044106742140897045055359
  ).finished();

template <typename Scalar>
Array<Scalar, 101, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod201 =
  (Array<Scalar, 101, 1>() <<
    0.999952503252348741945587595868726752302010321862962842640160259312235546880274449698257315612865166,
    0.9997137267734412336782284693423006767183495273084032267341983193325778326292953801676025443895029532,
    0.9992281658838012560346868946290257098516153754944940130226467520530908100048233764867667549189777605,
    0.9984919506395958184001633591863491623048548504205697015727316216977961920521611444356556988852979945,
    0.9975136131227297392523159490732886300840438086105855328504272247837664672750344955486610960952349242,
    0.9962951347331251491861317322411310354364312881404303794500680496326332035833755772786598644476859731,
    0.994832621936926782142299843653929761936233062751067005159406278011535799757227508945603370663774164,
    0.9931249370374434596520098928487834707317714588665203786568877462750407581158767565346847664019933285,
    0.9911749876510258446843411143088781518105402659030327513906042268630081298666067886406400214268154393,
    0.9889843952429917480044187458077366318393336371069475277518151616689376352422534206898910293287843795,
    0.9865520156031485854321432946337390143039373543464587346587372930104723655205069560603033947946340282,
    0.983877540706057015496100155511008167344367016850802210348877718312429655268074301403326980332098297,
    0.9809628425806126209479438330385845833627089215081985968088520965634662075664080997888986826549949823,
    0.977809358486918288553781088429201928635234494266253978308576649096992608182875222095184552924384449,
    0.974416925791328301911569526764196997356506284418833312736067723106867631002838503137657008767552093,
    0.970785775763706331930897857897505388550557199478207136291709670747070387695347868996970219831234348,
    0.9669175365712510964078221684669607023554992426412928656578658361296742735638125907926274694401260217,
    0.9628136542558155272936593260301663864373315067304141409782340260220288474968770791115620171315985332,
    0.958474525464443009892342079119681409865894412253716799373525214726024626565617437746641187095999336,
    0.9539007829254917428493369308943576446452214510146677476670329151830237614306533752369694260240604071,
    0.9490940500776430880700266106323839992030508797114678353136554117456700276328425491654138473610010668,
    0.9440558701362559779627747064152187467397203733820968716296342860565033383283239643915952205251479522,
    0.9387870435308086115958141514345454012914944026821306307976808848875897006926640830647186323539473799,
    0.9332885350430795459243336681308625040835460742970192958479582428963379615261547575280212141068959426,
    0.9275620589048801751310904131546790652681361187405625152248703656069526485853735319701299073061423394,
    0.9216092981453339526669513284819874591245827977321961466149319212181957959724884328473789856833151715,
    0.9154313832787401756921788026450869729596314887456563835931045173107288950582639938775034370630485362,
    0.9090295709825296904671263377891460644432772895845889380851263193192159125925438943268272115627519374,
    0.9024057102083787390268111337693574818617044044437404618178681017791436692906606357236494259465137743,
    0.8955616449707269866985210224302277698481817689977198299793548057692769962438879313722029220000094171,
    0.8884987940099135709863303098787152916808569893879564197126378129495479371670742156919705621667809801,
    0.8812186793850184155733168254278055824454944110212578029408939879511744591615490619081198423405125371,
    0.8737233059188845423290172135986970071399981294402535574524419494832291128406402318345019631135190616,
    0.8660146884971646234107399696762429663803148393055930721362823530933685942232516162072347249340462892,
    0.8580945065652815825676935927999502778555363760341316960827343862491985791059685351511088879943612706,
    0.8499645278795912842933625914201046540737907795006723543357282525525644030939206931511299746001670228,
    0.8416269226315942280342849082868531074672837728102279774930777439885216886499553950850851555979225244,
    0.8330838798884008235429158338447556799074948303099622593030660749580722045908198006931085278271997326,
    0.8243373193478551155538206639457735130895718967495233630383458320260587303950356055915078342533805623,
    0.8153892383391762543939887586492580053825503765137027228998074603374444991350256538033741491449174084,
    0.8062419752299814989885811994777251858169998364589722519458910701579350680567309473537906522827985255,
    0.7968978923903144763895728821832459828895268559642905021897691851365429763912416051720200283204740151,
    0.7873591329821532712191509680798931796145346072559194590770553650411897609980709415237206620700404292,
    0.7776279096494954756275513868344901065385397999360788750187363662040855456916511098252666277368585102,
    0.7677067275239078952210683529091098861942316318748267324801024849556873994869657282282256557677381645,
    0.757598118519707176035667964438400772313108971900041712675786102724641577680394739089276232413154456,
    0.7473044344001021672254328341835497039826844266409045218856603931927054981147675586526941000738312826,
    0.736828089802020705512427714820101002843278446247123442237371728824402128651434817958812767801863845,
    0.7261717523301654045878554370215472661816250772674102889589771690497699989889602820418566827325845565,
    0.7153381175730564464599671227043659640843978385956296346372452971369782354108739393242212421481283537,
    0.704329732011001711301582750659927555318368656244235711835615460607194955456377846882395316335520071,
    0.6931491993558019659486479416754372655870000179307284537746534276660764537335442814519151546245532219,
    0.6817993432991379075019986645713245489244668328989385979209377233798834845150472739942381989016957658,
    0.6702830156031410158025870143232266136698056840288239544064363680107923867496781967514987944517145385,
    0.6586029440214330855482255981923164649959125688267238792465886203497651713955059965254051200903009931,
    0.6467619085141292798326303044586304350197337842485280009881708445283311855165691660043032004604878315,
    0.6347628808669128796170068668230022306284304511519221004306467168859995455071211326636544774134680651,
    0.6226088602037077716041908451723122446538177322898160020859831756806700397509232092446585895935795857,
    0.610302742233949730523040146806660517058403367694982215051424280805356139833396946667853593621497007,
    0.5978474702471787212648065451493406363948991923204853355890654525451582770073183410305966102177168312,
    0.5852461548472222375133040734824663158134870533181343260509848129278176815370354528566335526655138164,
    0.5725019326213811913168704435257254489600339496755602780428623902594241338062564644475233463497485525,
    0.5596178538598728700448388327457235098853518800765564077164470733043236817764131810866218147232740298,
    0.546597012065094167467994257181749903956241775937527811622025329075836937974937989660490995577072556,
    0.5334426463281092439192593426094116478164411085119969208473114550721481216576428520275253954876893096,
    0.5201580198817630566468157494552085307689376904200938534085213700592361814742077519147329576118109058,
    0.5067463240599214601391067274797347056458903654871680881296937668410657071212375389927036965868798816,
    0.4932107892081909335693087934493339909907233253585561269111100309690047915685160180646274369605684417,
    0.4795547716885330549048043305588901482041907358101963591858251911803758360498149882570844683492612231,
    0.4657816497733580422492166233957545816116511102122109663384736171841696259026549129141765861336178709,
    0.4518947420866361433048328724615129443015157644807544359685017915516963764443145343210609079114012874,
    0.4378974021720315131089780436221959621257017634841045951883102040511231446537147009311430612495204668,
    0.4237930916938821018150669271527926990500215937379432633246953051778344976448935460996294828905126374,
    0.4095852916783015425288684000571577014953643891647545593418332406033996575333830126571803023650998626,
    0.3952774340481667161036767355786164268751802828413953481323751731864423346083941096771416717769373399,
    0.3808729816246299567633625488695874037497072651237109236688918529896939039269911072398067424952919788,
    0.3663754887636280023186351955882701997572694179931448726520167239939175930870683572062633275342460184,
    0.3517885263724217209723438295489705652493180963890712011764841982771959211582353864831323996819695339,
    0.3371156254451936501038051146407428576505379571457105716188684931743751572746715702595842981578861074,
    0.3223603439005291517224765823983254274021916230230857071396235464838001687980496448158186873443805944,
    0.3075263156275365712075278830398810004687642912043259745364338905529628765155758763460742079988168237,
    0.2926171880384719647375558882354943845615389891725809720966616591479275866303804506761415939640095186,
    0.2776365767518349561634681429088113628566349686099532054671990926363968592959498105521099375060135467,
    0.2625881203715034791689293362549821411320226945355221356619685263436360323365576518143739567087070098,
    0.2474755186979889209661488249174268759154087645638934236941316035306455768899211311532352561470984764,
    0.2323024818449739696495099632079641106975097715071369137590139207136369395990182284974360619709079931,
    0.2170726954172689985470672220029670779721938999270991357902171619245248839446282557656284876360368341,
    0.2017898640957359972360488595303964629436920035590489112762105422926673150876351059039969684067499888,
    0.1864577395843781906516839351866999265213011381629939705644609956826083188260844559042367859616842499,
    0.1710800805386032748875323747070898074658597251180667746873337338226056169081786227488639988652289617,
    0.1556606277572599523002823353224753515133875189063869551663981015551785105716883511033571184295374914,
    0.1402031372361139732075146046824055166168730062633597720335909281997729861746327683853732600872700211,
    0.1247113982607281204528715673545207515589982333365083841944751282150356770208259911993253337872837405,
    0.109189203580061115003426006579384886884899629969163393376959451862450669817611929980293468059914114,
    0.09364033428354398098988456682945235155973991630929011377333468303183642111603819036243629725387653884,
    0.07806858281343663669481737120155257397635002744853011605522973317573642901916084412685572779787914553,
    0.06247776146923010010357548046587278110387007259524085524009627233384507869659309108069244395266981719,
    0.04687168242159163161492391293384830953706539908602407963127262211945011420536696625093522311712544153,
    0.03125415208386678081857435045254965009647374420346115459659535607132758904106826629336446331838966621,
    0.01562898442154308287221669999742934014775618285556147271379873087358649059181548604433421074034429227,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 101, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod201 =
  (Array<Scalar, 101, 1>() <<
    0.0001279643095702472177129660471977784719502488831449129853608966076050209816295596111283519339329708683,
    0.0003586767242802754645181969869900269500033436655216579047576494944738455667510614267766937682052693836,
    0.0006122995385275168696846805654807083461426235351782734030683236159597965685166838369938152195799695226,
    0.000858414836239353116641673749122976796636294622430282310723378253641810343868865836321161534716287206,
    0.00109796416132059890255397465155433695320668680377055041080986432502583157952720451287334754862530357,
    0.001339837806603823417548630193044988851109521262412455799803518559288320379336949359280098181703163305,
    0.001585391140550992096876127152394394997106352842776751139381409476131472345775700508441015619702554222,
    0.001829370013456608079937023636017053544842628565452589389756308139770942124079700753581720406049373716,
    0.002070231704359758737864455312871834415331084959085069451670108020043376432937530834514657894766019085,
    0.002311230084871494786225744225510134287380438773065735159999091124742288837964928573756620971048211517,
    0.002553607200351081611078609302478131058895466305053763417639612853952439125629790004515992696243103568,
    0.0027949675414986555413292461029658737758380722160573537404973860344830432304606581559988641785133919,
    0.003034164687964493799173274541339900468605933134291636412911796203830962359527079124387172990714206055,
    0.003272879020499999516858653231039721551520409339370189262678116307065650996490757431062042542995760008,
    0.003511969468431394713471325848638390170759188045928297190552741493096048028969732219672833254960169841,
    0.003750020823567962529733158485712112348159223685069531181852954460851157504414041243780962117634666556,
    0.003986197449312351845502978137234075605324686578417663848600280979597069234451624110186671453735489671,
    0.004221532403395782422653456827004451920524665294620671026202239756551333734775394852778628484526315443,
    0.004456636558244945102241507135339789787132719616366906842231399143984863969189423109725323573412690623,
    0.004690551845487484394815061647087450186009100759288580407349005843486531302632671636170052726274782735,
    0.004922641716421777780212565220285968591494828833137248497346143347175710153546474394467679471815794768,
    0.005153606885703175540820699906446400342957696308857010747626071131559902287374493762504605274582173038,
    0.005383898809578246646150435173172899099580117936079301233351114387528398882439081658460228259363085315,
    0.005612813431108715975613157938340395016361532555465107332945593263891282282995531428244321238029723234,
    0.005839846438674521879798129982419838238231363098608929978906770766034018716462092789435625594516910632,
    0.006065503209733038639210334401835592983767421164719381739791806952016737892442518419438678967065251465,
    0.006290127769737675049512021234518437430769302450616991771844469959545405595199289780641768510259286024,
    0.006513174113155351356239795877129215322960146144601847561986596892840270912473216408418384203692690502,
    0.0067342304238343590654611050189077139337579428661822207707786337808575949872281246873416839519555582,
    0.006953676477075337786183334446340796072728823655007729556830733588966239695327747989299766304957947265,
    0.007171780533152533415247506848364203313887338631890007698522240977690399922071073455691691819206293665,
    0.007388103069859311736874012887741702411414660812955358416145731714182809070196702046651395034326151588,
    0.007602300051174308298176100492637398646810508645274035063254773311037968740546758862717448650413650777,
    0.007814665206620345050857117190163543990724607753060731321182432979600584815377776794525538700551009824,
    0.008025411322586484713089623665476169162006574914455486342435526710475715521840888813923198284818637567,
    0.008234175017316236900795362754944530554962889863399996738401158467584571753893767546578190709659340477,
    0.008440663936872804400933041489194208629137446585220120596390300962512676053298388264614074159400797092,
    0.00864511004867877912656139959329107529390995475093917358714796707519441644999045529942698752853105786,
    0.008847684279988310200072017253854394892873887043765549066079136637352442938013227275854401674633347513,
    0.009048080299936712288350711652436904774002712300568156156518842980085632386810439152585756802898064716,
    0.009246046523911117246875701191777007992093252186078222194794403139949034515443915195813578006832132496,
    0.009441768988751855523149035006992588007269382383096982719626408821700385627554694466529736544206358446,
    0.009635386261794623911064854114351488519794099013082922206750567706095911613440102605723779767958103338,
    0.009826636423730880655713263342838035734703965106013640878571837698408455439773141556053739751135591818,
    0.01001530101161305053268537450183723383477657205864819259996526272686219617593308060125333206810662316,
    0.01020153095088495986015919422291444604170764482781078058749436675401225673995745724412173377353082438,
    0.01038543929706851271926198711586114579021961800284251918440652337401764680754336399109983862736610898,
    0.01056679983247565098373215943168121363502057278618508833793914303458235981107041407993943364297213409,
    0.01074542170778693080646692567379385062368419611030369816650870230711808320290463701644350682496602029,
    0.0109214284150059723272485242401118092732363661469655697868570803339949734100898102044632064551426601,
    0.01109491257094606883971232155924910988765741030054048301049805096387727831070036463885851365449565358,
    0.01126567746332956237923986454364445975020263538029752880409674993306151633279197664763082968557355413,
    0.01143355579967040516909625306002457417492109489981932000788904127890992142347184978843723014320452381,
    0.0115986492564344452198273311076301905780005044751136102675889705751861211312807806383054183679898687,
    0.01176103385541580107532667409174481684699820604849713693551083262578106813472126382393138555949956809,
    0.01192053786750440393445381605750602287206317500254338350953822615952810474755211264089425716234611121,
    0.0120770145143856999489122102644258572955568910532812203013922654785704857956734989755681028477216458,
    0.01223054787113266210109559371404225931637605012182365004356286366221258547328117329470433039843612722,
    0.0123812003305813247809442690082857387033049691128506394907453099730605399685578313359317539537701353,
    0.01252882177740552594442502987847792106610336206449023510765700841087312853863703580304819566747484927,
    0.01267328363219971069040254068582595376734875571756351810596171151839252011389203584680584521476225204,
    0.01281465559402401820734387481377863160543256944343358504689341990605730981488173890530996316698964527,
    0.01295298874891947508181321347643329979562489424431565846999477873289496120786517306970018055000896588,
    0.01308815204304083947131249628348670851036112224232580154837717321966004622927898492423205845011157587,
    0.01322003331459425763799456688719462334189620391815633131484404529064189926521367839485579162951459166,
    0.01334869039477997219532795119897057181197377482864834660287166443390977747272579075922455954243639647,
    0.01347416490042760653129384849738331885547322480540901404630155740441837288064710786617876816503823236,
    0.01359634288062617797837336787649308030170304524352988593165062950385765550250906701461376938520952804,
    0.0137151272102157693269077189382262026452380927346487050899726504340872173733519269221593414367836343,
    0.01383056582631592119521912896609004389004651368399704858965281763755337704436153550787079094954436307,
    0.01394269234050930765052410813271065280007760112974987259513201930266401286816980414300401114925979985,
    0.01405140838748433908894290183169630886722307263275832266421903270254590241088109243808814769887476324,
    0.01415663080386553141797847993528261640630526208009864814582229937044986006106382174698831715698593095,
    0.0142583991982270615174298480143283210569114967931458925188901572145019810040575779770267939178514318,
    0.01435674034589556885653893978408636354274396518129464407253357760690093927577892456014972467260174597,
    0.01445157028450311174994356610608770124062851800510380696897150927368167958257325536190172851905760613,
    0.01454281897629966555537908242478331367093974940807454437313310150128695767033233219090391305931542924,
    0.01463051894733967823881185958389904589719486669315105442388854498508435595660250758810601747120378618,
    0.01471469106719224107616070689745858786072765279902369024462285710076938411172323150875197644700692755,
    0.01479526485272091523273713296861772987622838214603358066553193750660393754944169149639282748294447789,
    0.01487218274551550851114896175149252660492892913239221064830557514282517973556256815144902415410179385,
    0.01494547117901571779314143269144247770437604078025217140134716860953764509557182852261093020679010202,
    0.01501514584992601775929409587145443755032002323588111174200747923758465369324044629173258387167185082,
    0.01508114903502136704084960300677971411706204873990876004669745252231254627224248109290521214952293519,
    0.01514343516330660012211995270464269800292539698573623280323045297467105440993817987797386219158644908,
    0.01520202535514477439125881646888569025211919463333935445626371564939703945581469191951739643667489614,
    0.01525693069928626681152511683204470629971399732268750036394217944034515389007389929671099391188588943,
    0.01530810567790395821753937559915116616801682403690643228800469264564784030913210835827689581876331064,
    0.01535551634411844871530936744265760333339456402762829583281067040339156417079438785813803977699526775,
    0.01539917910754267008730746329865897219178834017417489169237318158604073880279882216028437470918029396,
    0.01543910086714820098073247575245749712612887092387114471193258884011616654864128482990385708165278017,
    0.01547524789208464777691069202608380676296793168411796518289216681914460360408594198031393841064226581,
    0.01550759760659890369589537474066318545807510752951606669595836276257111796731359646884956331286286368,
    0.01553616215856523293822391298200717744826237954682189190292938748246135086519100825031522894782722073,
    0.01556094454341676462938645995315419106586887459681000950711509896323065813425801607824110861960198551,
    0.01558192251438053678351080364024221646030414904878311912358342546946531166210410717584797054610096895,
    0.01559908471168710670698089639871094604147763682663977415666365901020379148853283010357942398227506595,
    0.01561243933403481989468460959619688421126306083369934256070141835881087959083997744621064481644308029,
    0.01562198563724487346851127872839698584387203112329874492073305693777003217662221236394106829734665013,
    0.01562771265700169003321136142695117550866696845782784143319846848437698368938878147784631060462399428,
    0.01562962018460484993210603370275515394376090869370621501063714495323380827592350161479429976705938016
  ).finished();

template <typename Scalar>
Array<Scalar, 50, 1> QuadratureKronrod<Scalar>::weightsGauss201 =
  (Array<Scalar, 50, 1>() <<
    0.000734634490505671730406320658330336390670473562482907839287269508983350629869832618532017297773015999,
    0.001709392653518105239529358371491195243731385491462579803600748923408444595625980539669054522607443724,
    0.002683925371553482419439590429001120081931114950998276269064431823948822648578762274914563759497141778,
    0.003655961201326375182342458727525195699206567405152203821841102959630709017771441458961802703182196879,
    0.004624450063422119351095789082978476650352495294894529361926377047091256462937297790997832380729483242,
    0.005588428003865515157211946348439210731318694008077152644014249922242465918452997709690121342532265679,
    0.006546948450845322764152103331495263699938363366476002001722817425086406363580127115385585215955057288,
    0.007499073255464711578828744016397783163583478948145093420303868488370148536938588536307039611158903097,
    0.008443871469668971402620834902301001934644459884101413435432633219294674997420475744667598031190951357,
    0.009380419653694457951418237660812118730787043238674165319444700563694116606628128485316300711702546414,
    0.01030780257486896958578210172783537797605834384142600833384277507186493379936272309863384853955114356,
    0.01122511402318597711722157336633358477722641956438240665062883459445326476893277814695720476708922865,
    0.01213145766297949740774479244874817073696312331126091390972989768034755729892512350649137912764233197,
    0.01302594789297154228555858375890179013496473584174960761694362512357211955921810068247407554615989929,
    0.01390771070371877268795414910800463779518081214311907227273973489136559350547494087801974256312280264,
    0.01477588452744130176887998752035425716938874311460362540933212194986996874726921976311784205232294707,
    0.01562962107754600272393686595379192555246997980993694974290756227734018303457249757714140017331790362,
    0.01646808617614521264310498008821078082116766160379836999790688511594469614461080018581487984194451896,
    0.01729046056832358243934419836674167481162350856516762702719305406933203899416917242802405233844039128,
    0.01809594072212811666439075142049303134757874495838988800424419596330376709029267485822662531114770226,
    0.01888373961337490455294116588154323429711127634742448003583054120992787902651271451124199489211667119,
    0.01965308749443530586538147024544406555526959949125069436533438216319616000491939872205492553959608778,
    0.02040323264620943276683885165758377060570969930261954801418063979246529895417873331184562513654790559,
    0.02113344211252764154267230044096968163532972887451469192900040283636355622142782116913907951356176076,
    0.02184300241624738631395374130439802476534899982324647882402207528628396930049589642235124557925228342,
    0.02253122025633627270179697093167396234015893534870941676568091656835882230869203349630548379428724242,
    0.02319742318525412162248885418272728845115448573608693000843725287541034738363620726552895163103306457,
    0.02384096026596820596256041190228343214470744909261698744517090279675260041446245292311797086395448446,
    0.02446120270795705271997502334977289064629573239780446326733505259000785184757952670885358973987966395,
    0.02505754448157958970376422562092326422383855852792884422277105548718781179659384025067621203717569642,
    0.02562940291020811607564200986215087092697767002026790801310503787773574730515728116953055191330491525,
    0.02617621923954567634230874175730188501127513119069493796475074543833122695954518087874033579151438984,
    0.02669745918357096266038466418633635063465575039001181906400597617032658772158110637959867789397912582,
    0.02719261344657688013649156780217069226698789601200126120852811289272727027287934586034861175955498139,
    0.02766119822079238829420415587042645529240035866422020013963312704136272866344782210219300494851294995,
    0.02810275565910117331764833018699455045141809940020502401645982850247279353227989471600413558625457418,
    0.0285168543223950979909367628644578732598427254839685791583849087430924242711120273767063365007216044,
    0.02890308960112520313487622813451526531560786805526098666824648343844194203170637624539633280038568174,
    0.02926108411063827662011902349564095444308419504534828620340859891012683203147900245312033073941704311,
    0.02959048805991264251175451067883658517280628507136774269293700728982720325880610236143272915346515888,
    0.02989097959333283091683680666859582765809141426079896852874754698565846650002485614273008231720703786,
    0.03016226510516914491906868161047923265710232578270560698902612305242467051585909312550999491688884607,
    0.03040407952645482001650785981882517660560724831011734620357833171473255703399906764202316750305706333,
    0.03061618658398044849645944326205319285308602378905778468306387287107732394235596774805698322911972587,
    0.03079837903115259042771390303055976009497083447037096809050886487013702941530849286667681201312233227,
    0.03095047885049098823406346347074792738298717776694074371006175714742274943435538862760453998517426296,
    0.03107233742756651658781017024291803484591543634795738762023316395831128592328639640614665484198739778,
    0.03116383569620990678381832121718665334383636868392807119846031156310947837313317190664987925329346107,
    0.03122488425484935773237649864809813488180274068218414014376947870775089027272962995795062026405888054,
    0.03125542345386335694764247438619802878783383672609090994322061459983197656141094526193261343643688553
  ).finished();
}

#endif // EIGEN_QUADRATURE_KRONROD_H
