/**
 * \file QuadratureKronrod.h
 * \sa R Piessens, E de Doncker-Kapenger, C Ueberhuber, D Kahaner, QUADPACK, A Subroutine Package
 *     for Automatic Integration, Springer Verlag, 1983.
 */

#ifndef EIGEN_QUADRATURE_KRONROD_H
#define EIGEN_QUADRATURE_KRONROD_H

namespace Eigen
{

/**
 * \brief The abscissae and weights are given for the interval (-1,1).
 *        Because of symmetry, only the positive abscissae and their
 *        corresponding weights are given.
 *
 * \var abscissaeGaussKronrod15  The abscissae of the  15 point kronrod rule.
 * \var abscissaeGaussKronrod21  The abscissae of the  21 point kronrod rule.
 * \var abscissaeGaussKronrod31  The abscissae of the  31 point kronrod rule.
 * \var abscissaeGaussKronrod41  The abscissae of the  41 point kronrod rule.
 * \var abscissaeGaussKronrod51  The abscissae of the  51 point kronrod rule.
 * \var abscissaeGaussKronrod61  The abscissae of the  61 point kronrod rule.
 * \var abscissaeGaussKronrod71  The abscissae of the  71 point kronrod rule.
 * \var abscissaeGaussKronrod81  The abscissae of the  81 point kronrod rule.
 * \var abscissaeGaussKronrod91  The abscissae of the  91 point kronrod rule.
 * \var abscissaeGaussKronrod101 The abscissae of the 101 point kronrod rule.
 * \var abscissaeGaussKronrod201 The abscissae of the 201 point kronrod rule.
 *
 * \var weightsGaussKronrod15  The weights of the  15 point kronrod rule.
 * \var weightsGaussKronrod21  The weights of the  21 point kronrod rule.
 * \var weightsGaussKronrod31  The weights of the  31 point kronrod rule.
 * \var weightsGaussKronrod41  The weights of the  41 point kronrod rule.
 * \var weightsGaussKronrod51  The weights of the  51 point kronrod rule.
 * \var weightsGaussKronrod61  The weights of the  61 point kronrod rule.
 * \var weightsGaussKronrod71  The weights of the  71 point kronrod rule.
 * \var weightsGaussKronrod81  The weights of the  81 point kronrod rule.
 * \var weightsGaussKronrod91  The weights of the  91 point kronrod rule.
 * \var weightsGaussKronrod101 The weights of the 101 point kronrod rule.
 * \var weightsGaussKronrod201 The weights of the 201 point kronrod rule.
 *
 * \var weightsGauss15  The weights of the   7 point gauss rule.
 * \var weightsGauss21  The weights of the  10 point gauss rule.
 * \var weightsGauss31  The weights of the  15 point gauss rule.
 * \var weightsGauss41  The weights of the  20 point gauss rule.
 * \var weightsGauss51  The weights of the  25 point gauss rule.
 * \var weightsGauss61  The weights of the  30 point gauss rule.
 * \var weightsGauss71  The weights of the  35 point gauss rule.
 * \var weightsGauss81  The weights of the  40 point gauss rule.
 * \var weightsGauss91  The weights of the  45 point gauss rule.
 * \var weightsGauss101 The weights of the  50 point gauss rule.
 * \var weightsGauss201 The weights of the 100 point gauss rule.
 */

template <typename Scalar>
class QuadratureKronrod
{
public:

    typedef Kronrod::LaurieGautschi<Scalar> LaurieGautschiPolicy;
    typedef typename LaurieGautschiPolicy::VectorType VectorType;

    static void ComputeNodesAndWeights()
    {
        /*---------Begin generic Node/Weight calculation function----------//
        void CalculateNodesAndWeightsForGaussRule(int gaussRule, VectorType& kronrodAbscissae, VectorType& kronrodWeights,
            VectorType& gaussAbscissae, VectorType& gaussWeights)
        {

            typedef mpfr::mpreal Scalar;
            Scalar::set_default_prec(256);

            int gaussRule = 15;
            int N = gaussRule;

            VectorType xGK = VectorType::Zero(2*N+1);
            VectorType wGK = VectorType::Zero(2*N+1);
            VectorType xG = VectorType::Zero(N);
            VectorType wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                kronrodAbscissae(N-i) = xGK(i);
                kronrodWeights(N-i) =  wGK(i);
            }

            for(size_t i=N-1; i>=N/2; --i)
            {
                gaussAbscissae(gaussRule-i) = xG(i);
                gaussWeights(gaussRule-i) = wG(i);
            }
        }
        //---------End generic node weight calculation function----------*/

        if(compute)
        {
            VectorType xGK;
            VectorType wGK;
            VectorType xG;
            VectorType wG;
            int N;
	        
            //--------------15--------------//
            N = 7;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod15(2*N-i) = xGK(i);
                weightsGaussKronrod15(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss15(N-1-i) = wG(i);
            }

	        //--------------21--------------//
            N = 10;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod21(2*N-i) = xGK(i);
                weightsGaussKronrod21(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss21(N-1-i) = wG(i);
            }

	        //--------------31--------------//
            N = 15;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod31(2*N-i) = xGK(i);
                weightsGaussKronrod31(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss31(N-1-i) = wG(i);
            }

	        //--------------41--------------//
            N = 20;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod41(2*N-i) = xGK(i);
                weightsGaussKronrod41(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss41(N-1-i) = wG(i);
            }

	        //--------------51--------------//
            N = 25;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod51(2*N-i) = xGK(i);
                weightsGaussKronrod51(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss51(N-1-i) = wG(i);
            }

	        //--------------61--------------//
            N = 30;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod61(2*N-i) = xGK(i);
                weightsGaussKronrod61(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss61(N-1-i) = wG(i);
            }

	        //--------------71--------------//
            N = 35;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod71(2*N-i) = xGK(i);
                weightsGaussKronrod71(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss71(N-1-i) = wG(i);
            }

	        //--------------81--------------//
            N = 40;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod81(2*N-i) = xGK(i);
                weightsGaussKronrod81(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss81(N-1-i) = wG(i);
            }

	        //--------------91--------------//
            N = 45;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod91(2*N-i) = xGK(i);
                weightsGaussKronrod91(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss91(N-1-i) = wG(i);
            }

	        //--------------101--------------//
            N = 50;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod101(2*N-i) = xGK(i);
                weightsGaussKronrod101(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss101(N-1-i) = wG(i);
            }

	        //--------------201--------------//
            N = 100;
            xGK = VectorType::Zero(2*N+1);
            wGK = VectorType::Zero(2*N+1);
            xG = VectorType::Zero(N);
            wG = VectorType::Zero(N);

            LaurieGautschiPolicy::mpkronrod(N,xGK,wGK);
            LaurieGautschiPolicy::mpgauss(N,xG,wG);
            
            for(size_t i=2*N; i>=N; --i)
            {
                abscissaeGaussKronrod201(2*N-i) = xGK(i);
                weightsGaussKronrod201(2*N-i) = wGK(i);
            }
            for(size_t i=N-1; i>=N/2; --i)
            {
                weightsGauss201(N-1-i) = wG(i);
            }

            compute = false;
        }
    }

    static Array<Scalar, 8, 1> abscissaeGaussKronrod15;
    static Array<Scalar, 8, 1> weightsGaussKronrod15;
    static Array<Scalar, 4, 1> weightsGauss15;

    static Array<Scalar, 11, 1> abscissaeGaussKronrod21;
    static Array<Scalar, 11, 1> weightsGaussKronrod21;
    static Array<Scalar, 5, 1> weightsGauss21;

    static Array<Scalar, 16, 1> abscissaeGaussKronrod31;
    static Array<Scalar, 16, 1> weightsGaussKronrod31;
    static Array<Scalar, 8, 1> weightsGauss31;

    static Array<Scalar, 21, 1> abscissaeGaussKronrod41;
    static Array<Scalar, 21, 1> weightsGaussKronrod41;
    static Array<Scalar, 10, 1> weightsGauss41;

    static Array<Scalar, 26, 1> abscissaeGaussKronrod51;
    static Array<Scalar, 26, 1> weightsGaussKronrod51;
    static Array<Scalar, 13, 1> weightsGauss51;

    static Array<Scalar, 31, 1> abscissaeGaussKronrod61;
    static Array<Scalar, 31, 1> weightsGaussKronrod61;
    static Array<Scalar, 15, 1> weightsGauss61;

    static Array<Scalar, 36, 1> abscissaeGaussKronrod71;
    static Array<Scalar, 36, 1> weightsGaussKronrod71;
    static Array<Scalar, 18, 1> weightsGauss71;

    static Array<Scalar, 41, 1> abscissaeGaussKronrod81;
    static Array<Scalar, 41, 1> weightsGaussKronrod81;
    static Array<Scalar, 20, 1> weightsGauss81;

    static Array<Scalar, 46, 1> abscissaeGaussKronrod91;
    static Array<Scalar, 46, 1> weightsGaussKronrod91;
    static Array<Scalar, 23, 1> weightsGauss91;

    static Array<Scalar, 51, 1> abscissaeGaussKronrod101;
    static Array<Scalar, 51, 1> weightsGaussKronrod101;
    static Array<Scalar, 25, 1> weightsGauss101;

    static Array<Scalar, 101, 1> abscissaeGaussKronrod201;
    static Array<Scalar, 101, 1> weightsGaussKronrod201;
    static Array<Scalar, 50, 1> weightsGauss201;

    static bool compute;
};

template <typename Scalar>
bool QuadratureKronrod<Scalar>::compute = true;

template <typename Scalar>
Array<Scalar, 8, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod15 =
  (Array<Scalar, 8, 1>() <<
    0.99145537112081263920685469752632851664204433837033470129108741357244173934673953,
    0.94910791234275852452618968404785126240077093767061778354876910391306333035499138,
    0.86486442335976907278971278864092620121097230707408814860145771276706770813291961,
    0.74153118559939443986386477328078840707414764714139026011995535196742987467230544,
    0.58608723546769113029414483825872959843678075060436095130499289319880373607467413,
    0.40584515137739716690660641207696146334738201409937012638704325179466381322626048,
    0.20778495500789846760068940377324491347978440714517064971384573461986693844946242,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000

  ).finished();

template <typename Scalar>
Array<Scalar, 8, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod15 =
  (Array<Scalar, 8, 1>() <<
    0.022935322010529224963732008058969591993560811275746992267507430254711815794197921,
    0.063092092629978553290700663189204286665071157211550707113605545146983997215272617,
    0.10479001032225018383987632254151801744375665421383061189339065133963746347248503,
    0.14065325971552591874518959051023792039988975724799857556174546893312708093066156,
    0.1690047266392679028265834265985502841062449003029442414973400675569568092163682,
    0.19035057806478540991325640242101368282607807545535835588544088036744058072405355,
    0.20443294007529889241416199923464908471651760418071835742447095312045467698541201,
    0.20948214108472782801299917489171426369776208022370431671299800656137515132323046
  ).finished();

template <typename Scalar>
Array<Scalar, 4, 1> QuadratureKronrod<Scalar>::weightsGauss15 =
  (Array<Scalar, 4, 1>() <<
    0.12948496616886969327061143267908201832858740225994666397720863872465523497209586,
    0.27970539148927666790146777142377958248692506522659876453701403269361881043066453,
    0.38183005050511894495036977548897513387836508353386273475108345103070554643398764,
    0.41795918367346938775510204081632653061224489795918367346938775510204081632658167
  ).finished();

template <typename Scalar>
Array<Scalar, 11, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod21 =
  (Array<Scalar, 11, 1>() <<
    0.99565716302580808073552728068900284792126058721947892436337916111757023046750175,
    0.97390652851717172007796401208445205342826994669238211923121206669659520323463388,
    0.93015749135570822600120718005950834622516790998193924230349406866828415983082245,
    0.86506336668898451073209668842349304852754301496533045252195973184537475513820852,
    0.78081772658641689706371757834504237716340752029815717974694859999505607982769788,
    0.67940956829902440623432736511487357576929471183480946766481718895255857539490791,
    0.56275713466860468333900009927269414084301388194196695886034621458779266353206161,
    0.43339539412924719079926594316578416220007183765624649650270151314376698907778283,
    0.29439286270146019813112660310386556616268662515695791864888229172724611166348017,
    0.14887433898163121088482600112971998461756485942069169570798925351590361735550548,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 11, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod21 =
  (Array<Scalar, 11, 1>() <<
    0.011694638867371874278064396062192048396217332481931888927598147525622222062374256,
    0.032558162307964727478818972459389760617388939845662609571537504232714121640493541,
    0.054755896574351996031381300244580176373721114058333557524432615804784099102911918,
    0.075039674810919952767043140916190009395219382000910088173697048048430404343143487,
    0.093125454583697605535065465083366344390018828880760031970085038760177735672425699,
    0.10938715880229764189921059032580496027181329983434522007819675829826550372870853,
    0.12349197626206585107795810983107415951230034952864832764467994120974054238971982,
    0.1347092173114733259280540017717068327609919130085597140663666849132029140011351,
    0.14277593857706008079709427313871706088597905653190555560741004743970770449918595,
    0.14773910490133849137484151597206804552373162548520660451819195439885993016738268,
    0.14944555400291690566493646838982120374523631668747280383560851873698964478507584
  ).finished();

template <typename Scalar>
Array<Scalar, 5, 1> QuadratureKronrod<Scalar>::weightsGauss21 =
  (Array<Scalar, 5, 1>() <<
    0.066671344308688137593568809893331792857864834320158145128694881613412064083829376,
    0.14945134915058059314577633965769733240255663966942736783547726875323865472695856,
    0.21908636251598204399553493422816319245877187052267708988095654363519991065305973,
    0.26926671930999635509122692156946935285975993846088379580056327624215343231909117,
    0.29552422471475287017389299465133832942104671702685360135430802975599593821710111
  ).finished();

template <typename Scalar>
Array<Scalar, 16, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod31 =
  (Array<Scalar, 16, 1>() <<
    0.99800229869339706028517284015227120907340644231555723034839427970683348682852419,
    0.98799251802048542848956571858661258114697281712376148999999751558738843736935883,
    0.96773907567913913425734797878433722528335733730013163797468062226335804249481245,
    0.93727339240070590430775894771020947124399627351530445790136307635020297379702831,
    0.89726453234408190088250965645449588283177871149442786763972687601078537721431327,
    0.84820658341042721620064832077421685136625617473699263409572755876067507517413803,
    0.79041850144246593296764929481794734686214051995697617332365280643308302974640704,
    0.72441773136017004741618605461393800963089929458410256355142342070412378167791785,
    0.6509967412974169705337358953132746925469482260925996670896616057609330584103069,
    0.57097217260853884753722673725391064123838639628274960485326541705419537986968147,
    0.48508186364023968069365574023235061286633893089407312129367943604080239955177648,
    0.39415134707756336989720737098104546836275277615869825503116534395160895778707468,
    0.29918000715316881216678002426638896266160338274382080184125545738918081102514842,
    0.20119409399743452230062830339459620781283645446263767961594972460994823900287344,
    0.10114206691871749902707423144739233878745105740164180495800189504151097862447292,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 16, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod31 =
  (Array<Scalar, 16, 1>() <<
    0.0053774798729233489877920514301276498183080402431284197876486169536848635669293166,
    0.015007947329316122538374763075807268094639436437387634979291759700896494283182205,
    0.02546084732671532018687400101965335939727174504686464050837798498240090389877811,
    0.035346360791375846222037948478360048122630678992420820868148023340902501837259902,
    0.044589751324764876608227299373279690223256649667921096570980823211805450699681272,
    0.053481524690928087265343147239430296771554760947116739813222888752727413616221219,
    0.06200956780067064028513923096080293219040000421032972356914782939561837620629236,
    0.069854121318728258709520077099147475786045435140671549698798093177992675624834595,
    0.076849680757720378894432777482659006722109101167947000584089097112470821092015769,
    0.083080502823133021038289247286103789601554188253368717607281604875233630643931923,
    0.088564443056211770647275443693774303212266732690655967817996052574877144545068992,
    0.093126598170825321225486872747345718561927881321317330560285879189052002874247269,
    0.096642726983623678505179907627589335136656568630495198973407668882934392360151295,
    0.099173598721791959332393173484603131059567260816713281734860095693651563064244399,
    0.10076984552387559504494666261756972191634838013536373069278929029488122760808796,
    0.1013300070147915490173747927674925467709262725965962924673485837217410761578254
  ).finished();

template <typename Scalar>
Array<Scalar, 8, 1> QuadratureKronrod<Scalar>::weightsGauss31 =
  (Array<Scalar, 8, 1>() <<
    0.030753241996117268354628393577204417721748144833434074264228285504237189466968629,
    0.07036604748810812470926741645066733846670803275433071982590729291438705551285307,
    0.10715922046717193501186954668586930341554371575810198068702238912187799485224478,
    0.13957067792615431444780479451102832252085027531551124320239112863108844454196067,
    0.16626920581699393355320086048120881113090018009841290732186519056355356321241533,
    0.18616100001556221102680056186642282450622601227792840281549572731001325550271125,
    0.19843148532711157645611832644383932481869255995754199348473792792912479753344305,
    0.20257824192556127288062019996751931483866215800947735679670411605143539875475678
  ).finished();

template <typename Scalar>
Array<Scalar, 21, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod41 =
  (Array<Scalar, 21, 1>() <<
    0.99885903158827766383831557654586300999957020432629666866666860339324411793315426,
    0.99312859918509492478612238847132027822264713090165589614818413121798471762785527,
    0.98150787745025025919334299472021694456725093981023759869077533318793098857463365,
    0.9639719272779137912676661311972772219120603278061888560635375938920415807840954,
    0.94082263383175475351998272221244338027429557377965291059536839973186796006518819,
    0.91223442825132590586775244120329811304918479742369177479588221915807089120840339,
    0.87827681125228197607744299511307846671124526828251164853898086998248145904704381,
    0.83911697182221882339452906170152068532962936506563737325249272553286109399931722,
    0.79504142883755119835063883327278794295938959911578029703855163894322697871712267,
    0.746331906460150792614305070355641590310730679569176444139545906068535355038107,
    0.69323765633475138480549071184593153338642585141021417904687378454301191710729468,
    0.63605368072651502545283669622628593674338911679936846393944662254654126258557332,
    0.57514044681971031534294603658642513281381264014771682537415885495717468074734202,
    0.51086700195082709800436405095525099842549132920242683347234861989473497039037501,
    0.44359317523872510319999221349264010784010101082300309613315028346299543059329574,
    0.37370608871541956067254817702492723739574632170568271182794861351564576437329149,
    0.30162786811491300432055535685859226061539650501373092456926374427956957436005954,
    0.22778585114164507808049619536857462474308893768292747231463573920717134186359467,
    0.15260546524092267550522024102267752791167622481841730660174156703809133685754554,
    0.07652652113349733375464040939883821100479626681349750080479524438425634204827043,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 21, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod41 =
  (Array<Scalar, 21, 1>() <<
    0.0030735837185205315012182932460309874880335046882543449198461628212114333936672887,
    0.008600269855642942198661787950102347252128922766707797662245060203142652486015161,
    0.014626169256971252983787960308868356163881050162249770342103474631076961053463586,
    0.020388373461266523598010231432754705122838627940185929365371868214433006531497388,
    0.025882133604951158834505067096153142999479118048674944526997797755374306421562835,
    0.03128730677703279895854311932380073788776928036281333735955459800532242326587437,
    0.036600169758200798030557240707211008487453496747498001651070009441973280061379917,
    0.041668873327973686263788305936894738043960843153010324860966353235271889596358058,
    0.046434821867497674720231880926107516842127071007077929289994127933243222585691046,
    0.050944573923728691932707670050344948664836365809262579747517140086119113477389351,
    0.055195105348285994744832372419777329194753456228153116909812131213177827708138152,
    0.059111400880639572374967220648594217136419365977042191748388047204015262840550681,
    0.062653237554781168025870122174254980585819744698897886186553324157100424088607224,
    0.065834597133618422111563556969397943147223506343381443709751749639944420314389638,
    0.068648672928521619345623411885367801715489704958239860400434264173923806029756094,
    0.071054423553444068305790361723210167412912159322210143921628270586407381879762478,
    0.073030690332786667495189417658913112760626845234552742380174250771849743831763201,
    0.074582875400499188986581418362487528616116493572092273080047040726969899567802967,
    0.075704497684556674659542775376616558263363155900414326194855223272348838595961006,
    0.076377867672080736705502835038061001800801036764945996714946431116936745541813259,
    0.076600711917999656445049901530101740827932500628670118055485349620314721456895745
  ).finished();

template <typename Scalar>
Array<Scalar, 10, 1> QuadratureKronrod<Scalar>::weightsGauss41 =
  (Array<Scalar, 10, 1>()  <<
    0.017614007139152118311861962351852816362143105543336732524349326677348419259710019,
    0.040601429800386941331039952274932109879090639989951536817606854561832296750763155,
    0.062672048334109063569506535187041606351601076578436364099584345437974811033532424,
    0.083276741576704748724758143222046206100177828583163290744882060785693082894173903,
    0.10193011981724043503675013548034987616669165602339255626197161619685232202553845,
    0.11819453196151841731237737771138228700504121954896877544688995202017474835061787,
    0.13168863844917662689849449974816313491611051114698352699643649370885435642952013,
    0.14209610931838205132929832506716493303451541339202030333736708298382808749806616,
    0.14917298647260374678782873700196943669267990408136831649621121780984442259534018,
    0.15275338713072585069808433195509759349194864511237859727470104981759745316268535
  ).finished();

template <typename Scalar>
Array<Scalar, 26, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod51 =
  (Array<Scalar, 26, 1>() <<
    0.99926210499260983419345748654034059370452496042279618586228697762904524428138991,
    0.99555696979049809790878494689390161725756264940480817121080493113293348134316696,
    0.9880357945340772476373310145774062270724841520916074813144997219940518682132972,
    0.97666392145951751149831538647959406774537055531440674467098742731616386753590708,
    0.96161498642584251241813003366016724169212642963709676666624520141292893281183777,
    0.9429745712289743394140111696584705319052015706089901419274524971372953225437305,
    0.92074711528170156174634608454633063157457035996277199700642836501131385042618304,
    0.89499199787827536885104200678280495417455484975358390306170168295917151090112134,
    0.86584706529327559544899696958834008820284409402823690293965213246691432948195582,
    0.8334426287608340014210211086935695694609641138235207860208647154617181324772804,
    0.79787379799850005941041090499430656940863230009338267661706934499488650817669053,
    0.75925926303735763057728286520436097638752201889833412091838973544501862882047185,
    0.71776640681308438818665407977329778059771167555515582423493486823991612820976732,
    0.67356636847346836448512063324762217588341672807274931705965696177828773684927222,
    0.62681009901031741278812268162451788101954628995068510806525222008437260184177807,
    0.57766293024122296772368984161265406739573503929151825664548350776102301275254117,
    0.52632528433471918259962377815801017803683252320191114313002425180471455022479593,
    0.47300273144571496052218211500919204133181773846162729090723082769560327584143672,
    0.41788538219303774885181439459457248709336998140069528034955785068796932076974432,
    0.36117230580938783773582173012764066742207834704337506979457877784674538239557587,
    0.30308953893110783016747890998033932920041937876655194685731578452573120372329509,
    0.24386688372098843204519036279745158640563315632598447642113565325038747278584862,
    0.18371893942104889201596988875952841578528447834990555215034512653236752851085352,
    0.12286469261071039638735981880803680553220534604978373842389353789270883496865982,
    0.061544483005685078886546392366796631281724348039823545274305431751687279361547149,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 26, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod51 =
  (Array<Scalar, 26, 1>() <<
    0.0019873838923303159265078518828434098894299804282505973837653346298985629639471966,
    0.0055619321353567137580402369010655220701769295496290984052961210793810027084280178,
    0.0094739733861741516072077105236553238716453268483726334971394029603529317612952548,
    0.013236229195571674813656405846976238077578084997863654732213860488560614587011543,
    0.016847817709128298231516667536336315840402654624706139411175769276842182270230226,
    0.020435371145882835456568292235938973678758006097668937220074531550163622566226123,
    0.024009945606953216220092489164881081392931528209659330290734972342536012282791776,
    0.027475317587851737802948455517811078614796013288710603199613621069727810352561978,
    0.030792300167387488891109020215228585600877162393292487644544830559965388048722792,
    0.034002130274329337836748795229551203225670528250050443083264193121524339062614023,
    0.037116271483415543560330625367619875995997802688047764805628702762773009670369555,
    0.040083825504032382074839284467075646401410549266591308713115878386835777314239062,
    0.042872845020170049476895792439495161101999504199883328877919242515738957656187874,
    0.045502913049921788909870584752660393043707768935695327316724254392794299566397878,
    0.047982537138836713906392255756914754983592207423271169651235865196757913882340764,
    0.050277679080715671963325259433440084440587630604775975142050968279743014638557162,
    0.052362885806407475864366712137872714887351550723707596350905793656046659251841831,
    0.054251129888545490144543370459875606826076838441263383072163293312936923472876042,
    0.055950811220412317308240686382747346820271035112771802428932791066115158273154731,
    0.057437116361567832853582693939506471994832856823896682976509412313367495720703993,
    0.058689680022394207961974175856787764139795646254828315293243700305012569494694325,
    0.059720340324174059979099291932561853835363045476189975483372207816149988449435234,
    0.060539455376045862945360267517565427162312365710457079923487043144554747826127769,
    0.061128509717053048305859030416292711922678552321960938357322028070390133747955035,
    0.061471189871425316661544131965264177586537962876885022711111683500151700828203039,
    0.061580818067832935078759824240064553190436936903140808056908996403358367196142237
  ).finished();

template <typename Scalar>
Array<Scalar, 13, 1> QuadratureKronrod<Scalar>::weightsGauss51 =
  (Array<Scalar, 13, 1>() <<
    0.011393798501026287947902964113234773603320526292909696448948061116189891729739609,
    0.026354986615032137261901815295299144935963281703322468755366165783870934008916848,
    0.040939156701306312655623487711645953660845783364104346504698414899297432880091997,
    0.054904695975835191925936891540473324160109985553111349048508498244593774678458885,
    0.068038333812356917207187185656707968554709494354636562615071226410003654051865661,
    0.080140700335001018013234959669111302290225732853675893716201462973612828934731163,
    0.091028261982963649811497220702891653380992558959334310970483768967017384678194177,
    0.10053594906705064420220689039268582698846609452814190706986904199941294815899257,
    0.10851962447426365311609395705011661934007758798672201615649430734883929279393366,
    0.11485825914571164833932554586955580864093619166818014959151499003148279667120486,
    0.11945576353578477222817812651290104739017670141372642551958788133518409022010334,
    0.12224244299031004168895951894585150583505924756305904090758008223203896721921852,
    0.12317605372671545120390287307905014243823362751815166539135219731691200794931576
  ).finished();

template <typename Scalar>
Array<Scalar, 31, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod61 =
  (Array<Scalar, 31, 1>() <<
    0.99948441005049063757132589570581081946887394701850801923632642830748016674880418,
    0.99689348407464954027163005091869528334088203811775079010809429780238769521018769,
    0.99163099687040459485862836610948572485050033374616325510019923349807489603265445,
    0.98366812327974720997003258160566280194031785470971136351718001015114429536459604,
    0.97311632250112626837469386842370688488763796428343933853755850185624118958181598,
    0.96002186496830751221687102558179766293035921740392339948566167242493995770702227,
    0.94437444474855997941583132403743912158564371496498093181748940139520917000662119,
    0.92620004742927432587932427708047400408647453682532906091103713367942299565129075,
    0.90557330769990779854652255892595831956897536366222841356404766397803760239444132,
    0.88256053579205268154311646253022559005668914714648423206832605312161626269514957,
    0.85720523354606109895865851065894385682080017062359612850504551739119887225686622,
    0.82956576238276839744289811973250191643906869617034167880695298345365650658952253,
    0.79972783582183908301366894232268324073569842937778450923647349548686662567348477,
    0.76777743210482619491797734097450313169488361723290845320649438736515857017291764,
    0.73379006245322680472617113136952764566938172775468549208701399518300016463608943,
    0.69785049479331579693229238802664006838235380065395465637972284673997672124322239,
    0.66006106412662696137005366814927075303835037480883390955067197339904937499713565,
    0.62052618298924286114047755643118929920736469282952813259505117012433531497486772,
    0.57934523582636169175602493217254049590705158881215289208126016612312833567825741,
    0.53662414814201989926416979331107279416417800693029710545274348291201490861911103,
    0.49248046786177857499369306120770879564426564096318697026073340982988422546379669,
    0.44703376953808917678060990032285400016240759386142440975447738172761535172813575,
    0.4004012548303943925354762115426606336110459329707839598318661065642917068928168,
    0.35270472553087811347103720708937386065363100802142562659418446890026941623314592,
    0.3040732022736250773726771071992565535311577898094627284442153699831215044237442,
    0.25463692616788984643980512981780510788278930330251842616428597508896353156869797,
    0.20452511668230989143895767100202470952410426459556377447604465028350321894666421,
    0.15386991360858354696379467274325592041855197124433846171896298291578714851098505,
    0.10280693796673703014709675131800059247190133296515840552101946914632788253912497,
    0.051471842555317695833025213166722573749141453666569564255160843987964755210500684,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 31, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod61 =
  (Array<Scalar, 31, 1>() <<
    0.0013890136986770076245515912267596996810488412919632724534411055332301367435858,
    0.0038904611270998840512672018445155032785151429848864649214200101281144722141092461,
    0.0066307039159312921733198263697501681336283882177812585973955597357837579510921305,
    0.0092732796595177634284411468920243604212700249381931076964956469143626665555805335,
    0.011823015253496341742232898853250592896264406250607818326302431548265365155955133,
    0.01436972950704580481245143244358001019584189989500150587356589940300019866207598,
    0.016920889189053272627572289420322092368566703783835191139883410840546679978649335,
    0.019414141193942381173408951050128455851421014191431525770276066536497179078684487,
    0.021828035821609192297167485738338993401507296056834912773630422358720439403754245,
    0.024191162078080601365686370725232026760391377828182462432228943562944885267674315,
    0.026509954882333101610601709335075414366517579522748565770867438338472138903282543,
    0.028754048765041292843978785354334211144679160542074930035102280759132174815361151,
    0.030907257562387762472884252943092272635270458523807153426840486964022086190775414,
    0.032981447057483726031814191016853927510599291213858385714519347641452316582440432,
    0.034979338028060024137499670731467875097226912794818719972208457232177786701551812,
    0.0368823646518212292239110656171359677369551647810303376700051985841961349700191,
    0.038678945624727592950348651532281050250923629821553846790376130679337402056166777,
    0.0403745389515359591119952797524681142161260621260302556339982896138108467609111,
    0.041969810215164246147147541285969757790088656718992374820388720323852655511600016,
    0.043452539701356069316831728117073258074603308631703168064888805495738640840023129,
    0.044814800133162663192355551616723243757431392796373009889680201194063503947394921,
    0.046059238271006988116271735559373580594692875571824924004732379492293604006228805,
    0.047185546569299153945261478181099486482884807300628457194141861551725533289679317,
    0.048185861757087129140779492298304592605799236108429800057373350872433793584352946,
    0.049055434555029778887528165367238173605887405295296569579490717901328215644593449,
    0.049795683427074206357811569379942328539209602813696108951047392842948482646115138,
    0.05040592140278234684089308565358502890219701825162223366424395921106671330859271,
    0.050881795898749606492297473049804691853384914260919239920771942080972542646840424,
    0.051221547849258772170656282604944208251146952425246327553509056805511015401400523,
    0.051426128537459025933862879215781259829552034862395987263855824172761589259405644,
    0.05149472942945156755834043364709930753273688039646416807463732336247408384424916
  ).finished();

template <typename Scalar>
Array<Scalar, 15, 1> QuadratureKronrod<Scalar>::weightsGauss61 =
  (Array<Scalar, 15, 1>() <<
    0.0079681924961666056154658834746736224504806965871517212294851633569200384333691638,
    0.018466468311090959142302131912047269096206533968181403371298365514585599521148664,
    0.028784707883323369349719179611292043639588894546287496474180122608145988939638405,
    0.038799192569627049596801936446347692033200976766395352107732789705946970952735391,
    0.048402672830594052902938140422807517815271809197372736345191936791805425677082642,
    0.057493156217619066481721689402056128797120670721763134548715799003232147410042802,
    0.065974229882180495128128515115962361237442953656660378967031516042143672466053105,
    0.073755974737705206268243850022190734153770526037049438941269182374599399314875258,
    0.080755895229420215354694938460529730875892803708439299890258593706051180567109754,
    0.086899787201082979802387530715125702576753328743545344012222129882153582254103191,
    0.092122522237786128717632707087618767196913234418234107527675047001973047070070305,
    0.096368737174644259639468626351809865096406461430160245912994275732837534742199462,
    0.099593420586795267062780282103569476529869263666704277221365146183946660389786402,
    0.10176238974840550459642895216855404463270628948712684086426094541964251360515149,
    0.10285265289355884034128563670541504386837555706492822258631898667601623865675284
  ).finished();


template <typename Scalar>
Array<Scalar, 36, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod71 =
  (Array<Scalar, 36, 1>() <<
    0.99961929856058782041953501908431046312122344098793693006949681335879003226845727,
    0.99770656909960029726016313931209472519327463717101331659229771374251910872749996,
    0.99382029303890921225840752201784028500756549314158919267204988858782225532215236,
    0.9879357644438514980351170891854859853130082957141743547561139575477141904733847,
    0.98013165785134098801985990365260988816688816643335451483051190897121118001337917,
    0.97043761603922983321507048258477014252488123931237660742063722005049631954884251,
    0.95883869699584307892126219427392217538678025386426561838844214684897224751254746,
    0.94534514820782732953872598552997464486281125124787315411193699309778399888957629,
    0.93000375305070609922503535864064081717372299765533113612223511310073872706011623,
    0.91285426135931761446493706355576423048806101362555800492979203053090112612446449,
    0.89391630583904940482411214013268317995163371208619178527507298070336460658114518,
    0.87321912502522233152328234914138526664433890227937494663482945132374508456122109,
    0.85081354468109158704203280179571293221562523873360193457191756345060523890999848,
    0.82674989909222540683405061274855757904689061798230734135296924639283502878825879,
    0.80106721312570571470358184335837821672915468266178172530092385688884078777211205,
    0.77381025228691255526742300920988748101181007297154592634339916728344613225608141,
    0.74503897566640677164430817613858088537216200738750302607111158644513281909224221,
    0.71481450155662878326440863122444674696204396852173051192539184344641779984452276,
    0.68319041848815657677750427209465627245583162169620597058174631349967317837373166,
    0.65022436466589038867579280898455926336976232592837400126498692372829521275712947,
    0.61598571048722183053960576573763958060437543282624706504831842513784006412601126,
    0.58054534474976450993450200818969007093207020356433243389225780721009714275662796,
    0.54396835169625813820629328275772195267411067648782865382360095285999810334862308,
    0.5063227732414886150242975558373273765860879386363692475310728175119138605102582,
    0.46768618346152964902238333071075817099648473017135998361346574491977383836437837,
    0.42813754151781425418762061300147985878471844648853384395397197681584829477549638,
    0.38775069602784231260916836932812549811185119580936302672108600182075528046918404,
    0.34660155443081394587697983493023823180840876937729210872687988554085496720314064,
    0.30477400147105037961997631656077667943504232291862720746805997589557055589547024,
    0.26235294120929605797089520045558051348630439864578128365820622160315955638609771,
    0.21941825841501800318906027538425963000063532656756922536752880223053188584771345,
    0.17605106116598956997430365644505992967542971232975704741088801268954288317318504,
    0.13233927061341662561114208274719221355992727169910167385281780939866606561355733,
    0.088371343275659263600929433497548803424117434765098141397250866681866122514350615,
    0.044230407960476319024979107246481757967114370323833316085958811261193123347951529,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 36, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod71 =
  (Array<Scalar, 36, 1>() <<
    0.0010255091107466680100695643729813291363492103070642858582975727227784906735431595,
    0.002872260014470701881751263465969355597201308839259322338521563899000744721608137,
    0.004898090890316147091344899953553457196327993894967444423387845828409761075440178,
    0.0068554872187842001348901767105931426925871477568144981232882470404290460895984801,
    0.0087480347678970122676293701710352458861764963307001921201429791683722472147065876,
    0.010644126760803645485209746262985218332391029274009547103100066836779188601495322,
    0.012552138631619428563285625493209263698260069575528454998614271173970109247553238,
    0.014426148625293634297009286030452901069739546478449494949457747392730870719295903,
    0.016249771999849792514114323652716404687719857083380775836322731692330775212216936,
    0.018046651129558703661835105009272657776454032578289324890512928629258737403785117,
    0.019824630731925684308646334168268259826950391514451065033226484505295926827164293,
    0.021560729002820740844335822909019800238372004221199835797011505620017003534049879,
    0.023241810895466635024831662363973974078622324717778396471237170318777426472010415,
    0.024879389864978961423164981122209087545400967681878393697406584702977613321682196,
    0.02647872983924452154290308599311750111721575798899054367715494613708239968046066,
    0.028024859270480325028693084060006516929131350807106618245389798092193940814116296,
    0.029507312940483805031598475083605129497195416024225053161825628017005347160943399,
    0.030932985690892541245845774135995668692001232056465286999377614811802956874869479,
    0.032305749674860325618014744093877892739072269464869054991977550639941544431959251,
    0.033614549627794942441083314581372849463241988953950565277097480707739494695022445,
    0.034850776289816578628836317951675837601369944935897846370500878423432960361444526,
    0.036019321064432511602864728955399911318619358919986805734360487844596257595636888,
    0.037123478036749476519910541798684375628929969722345443502716871443813658166848641,
    0.038154553938451798028446705198487385869573550067937401248147900991006181697627844,
    0.039105315164666643092732219877911245415817085534888679595955712649511194485448649,
    0.039979834860934887792751606377606180882086673346823775810423787997312733628855703,
    0.040781344758592937971253945332410375250763550465017129351694031180028906331530078,
    0.041502791141104966361063978368941504391139253914151688414075758952173593055414988,
    0.042138022897423816145179835435035220743674798964502973649183196190293996519868788,
    0.042690934844493889367912787781958485858712595901501642248493637100592401433956698,
    0.043165046120110595750160948447551009170959351536178922935585030550118703987524461,
    0.043554545416973102985081665460784031576239509449315426623199761720205207887531437,
    0.043854154924597308573080296130267892529002615185041842321247166835225237209644511,
    0.044067983466935987076833953050618599232490714210633712921001911222056812636174968,
    0.044200097525898969471544432192350549701623092888935123581041587080513216140436586,
    0.044245665721056228432178796012203477257175078814926863398043123764450628180835459
  ).finished();

template <typename Scalar>
Array<Scalar, 18, 1> QuadratureKronrod<Scalar>::weightsGauss71 =
  (Array<Scalar, 18, 1>() <<
    0.0058834334204430849757538962401126240307543177982329737116842045198831895055197638,
    0.013650828348361492266404002920516383973994037841424920997190099882564489745237799,
    0.021322979911483580883437983966205078323809644719936207264898455625597194319101257,
    0.02882926010889425404871603971448491626152772662959499974747374084211656712270784,
    0.036110115863463380532716969647549938308535778969986943166786395242433205541370174,
    0.043108422326170218782306459374908203422806587163990208710062919080607819141402085,
    0.049769370401353529805199676084994958594494953194573163695730664361915413657616843,
    0.056040816212370128578327747165100964440348534904556345549705285115035816231579208,
    0.061873671966080188887014138788688652265371225804096435073404291752969486734178072,
    0.067222285269086903964305508748148558547093119149604808460559274951704174641527827,
    0.072044794772560064665461909785277756147267393027427260563296821562060925806165762,
    0.076303457155442053538658537884226225527080081895636534367728845196874540985687448,
    0.079964942242324262932662080985045756328835499430088847380436544107979165183561191,
    0.083000593728856588379926528216177003485174503813451119955288849687225051151034846,
    0.085386653392099125225943987391117567641190988283750751120531461868765411273414527,
    0.087104446997183534243322031605540936685056715093854931404453834221796788661419861,
    0.08814053043027546297073880759309664142545431727449083717057178460222916745757997,
    0.088486794907104290638207387777615669182409150010605423320393054756483185681784033
  ).finished();

template <typename Scalar>
Array<Scalar, 41, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod81 =
  (Array<Scalar, 41, 1>() <<
    0.99970755925870001652122454213597471358259546611434103792861721563550067876769356,
    0.99823770971055920034962270242058649233577038159504590660333611709683886302006007,
    0.9952505734460727503656095401672364039613507852014369306567866680886873137017436,
    0.99072623869945700645305435222137215496222208135108653788307624430407890323880409,
    0.98472283986425006102933341488331281956810416420995549927835490436461204433736155,
    0.97725994998377426266337028371290380697866793203798609642926201601106321444455682,
    0.96832312685414990090376748802208053929226225295460316288007099353910097997045131,
    0.95791681921379165580454099945275928509488349060274703156905384358175835562405281,
    0.9460718371625000382018348083531018336444904902723308308445722149705019724084874,
    0.93281280827867653336085216684520571643475357528269244922934301541564052392365848,
    0.91814954307289887682909109264899900900889565336112218903518292811232075063771961,
    0.90209880696887429672825333086849310358448808105766946772526011154037018140119227,
    0.88469200870108974596916731568481615247744988567171816838951243436926031612773879,
    0.86595950321225950382078180835461996357054655301110164945994025480668207884720974,
    0.84592398558731071742075270176063153327242355905011103615087410523527643873933088,
    0.8246122308333116631963202306660987739072403842429877996917909631528071718423926,
    0.80206056614025212716548248052306700513426840614441761987500056752268806316524055,
    0.77830565142651938769497154550649484802069131612689179424534206062931194191640397,
    0.75337980343894219817195210861389792731211452767940610714665317135166450197404458,
    0.72731825518992710328099645175493054855737867353332813754755124418592911464597313,
    0.70016297748732993103067821243443810794745752806773607910623893324806017289620593,
    0.67195668461417954837935451496149410997032598138385115007109296898666247595642093,
    0.64273952430557996253724399164382458078430653187325657552355197231509551294145296,
    0.61255388966798023795261245023069487738012378168314961113534756253019097242434273,
    0.58144706582913000652989501202985449166039158983665261813405878927362996383290412,
    0.54946712509512820207593130552951797023397510159565146490256547172185574511327931,
    0.51666060738638370597736752352686730669850255178961562462835446915119597100405251,
    0.48307580168617871290856657424482300459902239553311410078933524322594344274197039,
    0.44876451363816376391523113354600061846497447744502934840158553097864113838266982,
    0.41377920437160500152487974580371368297409962405291823829440225106864266360911598,
    0.37817143547358892456847074204267036554749984414768251954773947368853913859805825,
    0.34199409082575847300749248117919431006695362002732579646340958409814370894204516,
    0.30530244173524671953945499726037915149778023393627448872465478416736972425017141,
    0.26815218500725368114118434480859618342480437323624698145725997487382119319400721,
    0.23059852188071949700436103627672748185567094334316913265228189345164262823458756,
    0.19269758070137109971551685206514989481409202110520887488546759223650272166368799,
    0.15450687937939447709272996582455060888266557312076310889333316923103145116514639,
    0.11608407067525520848345128440802411376872853085421594903029743216157916394797611,
    0.077486588331282841691154866126171947050874301899260571134257523694373965269638677,
    0.038772417506050821933193444024623294679364634383141599168637181438006575000806223,
    0.000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 41, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod81 =
  (Array<Scalar, 41, 1>() <<
    0.0007878633238943714987202715548968673164643811254294629520381530097517265373503229,
    0.0022074857357267779621688092253112114753944792167763736687518200810142167660982221,
    0.0037652286793419220741943727768885224817471910471180740651646681724164910000540671,
    0.0052719427148854739110091140074961040179529632523092027625028120089091544681977806,
    0.0067318134852073999634207932519728773178178093616358951576024397712166299001792368,
    0.0081975763867514824495610532536615043925219070132538828544083440651035236342261974,
    0.0096754014840171879150354917129857476910676931386310444871152512824876359175528698,
    0.011131321664027503749386166237334493448240351033058436192259787134730013357815274,
    0.012554384768517266031774949416019315496473208596778150182439373626830766735100952,
    0.013962559866980614042573292767307888722184887251709429311489927156662545745050386,
    0.01536132635910245297306719365346221049653776351247420492638001430436904317202486,
    0.016734532475002583196166653896928448626180821037909840696301902122720899942686432,
    0.018073868408818190580191164167276737991234773159314634434711693192937021226004746,
    0.019387645894317741004830712156547477908399596502000424439378131331393658488888904,
    0.020679043273528175315386985115765195769089632146558760532021911315306409777410391,
    0.021938187335833093461400812673274224721673229673766795220541942634899844655936007,
    0.023158931013377024144415426316572914269161383636852415161511626669875550060314243,
    0.024345690182273359270080453250650846442501414928984658153600310479022357945900261,
    0.025500217603130127604115365581320732102086094861714960942560856166505372849479615,
    0.026615737499024686758584061586931422289917915773450769202755309145761155889198469,
    0.027687626111061091515434162190229829918805878612486108451920154953722349110806239,
    0.028718386841092123287744302424950383648554279474058418183621669576343255663821648,
    0.029708927277776594641577677914863826415985036326081592540606871364252297282228815,
    0.030654360891411525378236034929974262089136171142020615537392846533889420362741426,
    0.031551223619115362481714935956743745051137427183484712117993357492137641795931856,
    0.032400982507605944285169274565133740620154350296818316217669623793568211616019042,
    0.033204044341257560400535983776656293146974943286771522467476229475309041185605961,
    0.033956862834209806251352173002290637829658442302929424126099250765431915836509972,
    0.034656935843497533946135050486839653403978114496979022416042452188891831717234424,
    0.035305144708621841038888919750797948720374483915183299658900610313124284580068617,
    0.035901602783628104427494261642348023287283105520199429620709713172602192814939845,
    0.036443826530340924758064516845268009024686738253594837103514890418032498835192557,
    0.036930169534048554604577014911286015757959386012924111160279322654142776721691731,
    0.037361180025469218088172501046716556601260383783538020582682218657837885952876698,
    0.037736801263093544152572379691711286761599279202304995186200247710975412933385534,
    0.038055463778852420990729803545407097652699700084613683662409658557874718063655274,
    0.038316324005174859678476802979816998025209079592924165815435405427808456407978006,
    0.03851974174995072693620904485019618182205811434105600132185495386768997172848566,
    0.038665555439141040397419244259677575305934269304613706226907863799864250473404401,
    0.038753029378752386140211474363657141577017405603001972539094316682458440366203757,
    0.038782104764282805386402596525660100725771829989377259439304137844258256963901164
  ).finished();

template <typename Scalar>
Array<Scalar, 20, 1> QuadratureKronrod<Scalar>::weightsGauss81 =
  (Array<Scalar, 20, 1>() <<
    0.0045212770985331912584717328781853327278311101997059907003419423426639470018752912,
    0.010498284531152813614742171067279652376792621315796779715675123611625298897090609,
    0.016421058381907888712863484882363927292342293346957761971903915513590439301476291,
    0.022245849194166957261504324184208573207033196679354427880734240005691311520154997,
    0.027937006980023401098489157507721077302550862050766398448085916450374899481321546,
    0.033460195282547847392678183086410848977241786653764350413191176699052399771071445,
    0.038782167974472017639972031290446162253459211232025857837266888919538730143577142,
    0.043870908185673271991674686041715495811006837170236889758525908649801785806359757,
    0.048695807635072232061434160448146388067843027377119775140646051275178428417444642,
    0.053227846983936824354996479772260504555321171822006450764360880526520815021952685,
    0.057439769099391551366617730910425985600104835854453626506681266925548361711230511,
    0.061306242492928939166537996408398595902593763511174321986897638686868155823033814,
    0.064804013456601038074554529566752730032692964208488906363195244271283972925637645,
    0.067912045815233903825690108231923985984197238379285954717896203593040781627135076,
    0.070611647391286779695483630855286832359559103995586097310684268962663697311808261,
    0.072886582395804059060510683442517835857559080985798630476254816832990555730945393,
    0.074723169057968264200189336261324673191202934420359821731340891417653403032577444,
    0.076110361900626242371558075922494823012559553845071107054182459029299240635795449,
    0.077039818164247965588307534283810248524439754163940415489180892432541643090491671,
    0.077505947978424811263723962958326326963668652788106435732954273854072132749010883
  ).finished();

template <typename Scalar>
Array<Scalar, 46, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod91 =
  (Array<Scalar, 46, 1>() <<
    0.99976825819812844184050501808521584761778222189508726207001736155243195699423723,
    0.99860364518193663815654767690082054809228852721447541688895639813678472114854761,
    0.99623648400262042934511873220069067464977892521152046794487851800280409138574353,
    0.99264999844720374174861712059773534497500164330363935061698792830082419710015247,
    0.9878892975583419803584513571282678743646914887969562992477676052484480360774968,
    0.98196871503454056823931847363434148153836524922046180798689215000297248360970174,
    0.97487472859984626283011247237626660754074730116340505674022814470359774749552449,
    0.9666083103968946047364251608924780971166790306094154138679748851723561843838013,
    0.95719162401328142632709071186085980254412868260598226254342018684405583971065769,
    0.94664169099562906178472059695383707845046834416713505079785560311373070292283411,
    0.93496270170823072849720985525389099772434749839611471519529283903382868322150458,
    0.92216393671900038809746736096052731926536287725066116835082658949266016612902318,
    0.90826680768346396973605068382241808590437868337987333594792276204787882761855197,
    0.89329167175324173846464905149305734636540124041379268616271110945467320262075725,
    0.87725158719302201212972841148989357243612789849954287129455873089547446822289224,
    0.86016247596066422533907887056713438778341442357702210107859349253890176010883528,
    0.84204857691040695822975484057647336894431244265745133553516050506630660247409114,
    0.82293422050208633703577526002650202999341525805627043354404173117169482590729746,
    0.80283895116683677464879103408690607617541369942642964318743526707139782041820856,
    0.78178431259390629131236318809860281766027351683906152303928839827665343874261848,
    0.75979816452041089331911717455595240315934812011636086615244692679540212528961354,
    0.73690884894549035262373884859489201987960568083761708092734339893476057296571687,
    0.71314122427549174186073675931964340779561425372465255685288426031879361947842239,
    0.68852168077120052523201982588043823595523300561852778072094711167345703929090519,
    0.66308170860223379808352326376326032948162534249686776813538830569422627903819457,
    0.63685339445322335927122384590338315069203124346567644054284862876198285675326143,
    0.60986605449389570894381986808230584011038649491498371630727262915522039909979649,
    0.58215021256935318668096733444417713100008882598322714602358602776591445693964699,
    0.55374067215934876332312890149007883417942668039810098746054829677541977552175277,
    0.52467282046291606709113410046016240260710827080028258689085546576831745642824328,
    0.49497965749810183702993192041027660372919586028088835787615634742812639415867377,
    0.46469512391963509857960150230974851083981266723719088284724638002550643683442146,
    0.43385684374178294432166447428181289994755173351281382411043863148495021262152875,
    0.40250294385854191407797450854834645597029935756939643883585768013407519505077633,
    0.37066934235973061895322964085585254593836191642980941546566179259421280782580746,
    0.33839265425060216164340410003187298953234144313742269794759298348773544897972161,
    0.30571272186623304325858534427814131940857839940069437877138251827283907960865082,
    0.27266976975237756060876539161564518189821175427664206012150716917639794287128673,
    0.23930185320471224179064130404859896962578658675486232206672170307693970017376563,
    0.20564748978326374571978722547154393070323638569942983104123381367910745554825163,
    0.17174806594978090965313436541849815218083385269233866792686944760283517358898172,
    0.13764520598325302875659004142306555310676555654152505961789002992717675721194056,
    0.10337830283214540467276673615057417548074590315258651768751379581831940946565926,
    0.06898698016314417249041461410381172969392066693096968266540925528852889248985178,
    0.034513448751777669494915342779599656653940306935848652165985766632308259813089743,
    0.00000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 46, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod91 =
  (Array<Scalar, 46, 1>() <<
    0.00062429185718321579857663066059662918012169021712219187289099083710570504344054276,
    0.0017490965174853528128551618717308545106060229418478547554023147188022750249536031,
    0.0029841719154664664199850328162396155431249420146315932119731179686214049537591979,
    0.0041798425326650940222900049610171116358566988905985290722634160027697426725722885,
    0.0053393274180809112315906261149760320997640426339612251264878529999539772680190766,
    0.0065050547138169624590461163367229884571480200614034222510370205512268043842923931,
    0.007682833184321492093855114361401062236665627950194775612077189486863515897992487,
    0.0088456967773005162410681523420850343253609815015359610314166534107820988062756612,
    0.0099846967209594327230795414541790376966697804297038835921040631914510734021967835,
    0.011114900084471905081214169843337819712036038246797397412816255879399443778104762,
    0.012241673811402288110546065584122933229152041820195952828418254562122099066476445,
    0.013351970068858539986220599244425019309630264783059361451985864768661916028837378,
    0.014438762165928273765415288690124200648843024304624737514522893052449402075727015,
    0.015509579891057820850984138538050358723213920016029892622435732956190013543851171,
    0.016568054970638997572824552271448334359963237368445868946809428566722302823278329,
    0.017605928233491798926061755759542996434953330360100396279763769856937220239631115,
    0.018617706025624844797183225710241151202080253952097705053800554907678072939706565,
    0.019607914513681521187475669732602045114900377314855366715035104641755536296985513,
    0.02057913131743379223158230090375461301131538208474606892777068350909789194250457,
    0.021525361049768482006301373418648433370728624183082148348895433984605973935016789,
    0.022442120993116343722698638470290079908184558555795425512262405463508396738627653,
    0.023332489150752030012897331589123011767911641395466737180174542454040870145971914,
    0.024198444172321291133325107127408968805971958016186620014349981662331037498202582,
    0.025035285477274227456262059338793060135806562660190565255583459623025312227868606,
    0.0258392332899751311591222330838012047223041161595982949287042405991849088821686,
    0.026612605704540351680635471821830517888115401699576507164319178474866695128190639,
    0.027357058699311067569982385817493451237750045575029570941541412816804843508226983,
    0.028068735377739344269710042122035700448892250186067397424331956232817614177250556,
    0.028744378351913464777329407661065743360179842060024831038116688979367542483273372,
    0.02938590583816742107250843684941804435493284536361294781257330059231665833733477,
    0.029994827990452852921993496384041214508389869746281086718775142384149994365501959,
    0.030567891994471739722492520538454426698530929561571272077818643308309893672269795,
    0.031102250310863670849808814069784309613622688330606149115022976859458582472065601,
    0.031599633541729714553445642531251859224533337941265765127697733260970307015794893,
    0.032061527034868518929401196665394505590093943041343351026262200391025213412698923,
    0.032485140588613364324168862223830845599244719828295694034258235795810513840641388,
    0.032867959995471594695621190734291225831915886019156691830942790179012107893539152,
    0.033211665344805867921260427556943444445758771490997901205994265786623477286122109,
    0.03351780561085007806314526562438369890686100054127300685689711473182696530587896,
    0.033783960627018866958727390482489573504221388635925926172589807017678922535781763,
    0.034007891275067314481268887460302577645559575193863133718221617017568853709059757,
    0.034191322586924112014840256245739499449209247096897951401212291466142727798879179,
    0.034335936273322179002964129643365578751422195141274448782444127165370615734909739,
    0.034439614252685771597471203853149380349432892387637081207986839812587520952032482,
    0.034500341752513025428917763151229650786118075595106676286024074198941002808787304,
    0.034519959991185894723692636677684311325803913403841269075976755746125903890559498
  ).finished();

template <typename Scalar>
Array<Scalar, 23, 1> QuadratureKronrod<Scalar>::weightsGauss91 =
  (Array<Scalar, 23, 1>() <<
    0.0035826631552835589311430286593513925705856363581839446140438129703372824582081898,
    0.0083231892962182416457358531222338537561579312929482218949564792158557444070912966,
    0.013031104991582784320631082469686926027141171582638991140910666501517193575492307,
    0.017677535257937590617092546669577088520651278126465788017364173395791419345712163,
    0.022239847550578732393950758552168993344875708701299970719609886244873774663844265,
    0.026696213967577664805674778793107527787824910565891523568536449814312066178424676,
    0.031025374934515467162507938893768063885921152123974800441854171750540660433709695,
    0.035206692201609016247699798261575090810088074712714641340774353275271042714302779,
    0.039220236729302447564187185343929338218130124596306669807227871516880678876730127,
    0.043046880709164971151691113081166941788319236163191320154316807136776423919167493,
    0.046668387718373365267768475741654101204986141487853582512766785479862957471617775,
    0.050067499237952029799132102474874317391498692935146437230482188574316360661834505,
    0.053228016731268951945904044019310403798482216940175515966048253621689802494228482,
    0.056134878759786476643923940374869763241480184946163015800445091253071159018619373,
    0.058774232718841738574361517631831422531265725460980208116575926119542543519664308,
    0.061133500831066522501886370536325573260124234265242120073508642625773363203615944,
    0.063201440073819937749963730290666881866300237275822817020858633594145052673267288,
    0.064968195750723430853826570359075695083849725487583273052023754991352747843192831,
    0.066425348449842528082914715639103737613174546750674815956038925523310902419401815,
    0.067565954163607536270910223873648630979472580923946461993453587314243601383977915,
    0.068384577378669674531692099334316097073484913054644946380889445614953208491460207,
    0.06887731697766132288200284829805578888452413011064854515874106838508300324128042,
    0.069041824829232020110798555159404740723322892275004778077146050160998022009771116
  ).finished();

template <typename Scalar>
Array<Scalar, 51, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod101 =
  (Array<Scalar, 51, 1>() <<
    0.99981190136436471898752764191979778490900714786427593953993251326054989100144325,
    0.99886640442007105018545944497421850599624351290407852517703861765753910830831804,
    0.99694438701887617830552521284551574074542656874601903500545420561248311632272279,
    0.99403196943209071258510820042069472815747797106832359033652478911593331024445953,
    0.99016501066968000942392663658159575132877674133476955199906354690019109111970596,
    0.98535408404800588230900962563248940401559263094540580871780922100853508147046088,
    0.97958729676076942938993428547746899117341045817569900557325885025691720340475638,
    0.97286438510669207371334410460625205366917340704995420174509627522567671898548827,
    0.96520165106614520049209141719129593627549507978393594167251484848289285019669887,
    0.95661095524280794299774564415662209405143412462604654285597908297305530629669279,
    0.94709403424493944376335887833533441316436721753676464791529956773371401219321483,
    0.93665661894487793378087494727249660215373159809520292237505427380935613123465265,
    0.92531354647480188621729501218597896170837009890338686028606148828548900846714937,
    0.9130785566557918930897356427716570947841881916977823896227265532008524340108483,
    0.89995988756429461789335121594253760342125497503871948626081586958785784055003533,
    0.8859679795236130486375409824667536341942903107558083624465571396548873258370477,
    0.87111919820410031041116631276794734769410099155684303111465711591402899382321714,
    0.85542976942994608461136264393475746765483303948690596343832992034131863007148515,
    0.83891258696722439582669453115982171629679423354273005968127193574356670377503388,
    0.82158207085933594835625411087393953776074138334348574852337446061546866560609022,
    0.80345686805045941104583132344339868468195642520966055245024202084038729301057381,
    0.78455583290039926390530519634099120084731627255644435273885912189313102039422459,
    0.76489567937235152255213391009405332066417203426695412361502503318421471216539209,
    0.74449430222606853826053625268219424287018793132958457852477914793292979130874877,
    0.72337276602259251579221941156517307053014928418821661913846110988108659462689234,
    0.70155246870682225108954625788365572814971922848469564274092437903329224583431315,
    0.67905338940674727147750574623528945542568600842673462223441957963579249481087404,
    0.65589646568543936078162486400367981904141052838233182653093459139210847858049639,
    0.6321050684450648764522644416531749456265541902185896332965326641221102874060656,
    0.607702927184950239180381796391832893604205020675994355712131188939685647683152,
    0.58271281781783653230059341928604868801078591807289904806677271522318917626182038,
    0.5571583045146500543155229096258016078158983822377502613164614867604894521885047,
    0.53106482452270813956871444365352729284157032257425147867381892999264979908759931,
    0.50445814490746420165145913184914119263537867827067923818273921096822637869405957,
    0.47736339223304303620238841113348793007606445039659173525358738364316824135772569,
    0.44980633497403878914713146777837581731506451346517366594148066988597085369928437,
    0.42181415731061309702869639767299001110343390879165853447303564046361632211867734,
    0.39341431189756512739422925382381727024613946867265600307903662085649772812450218,
    0.36463382886161427721485091875517338779531125640737641736026081797481292748067871,
    0.33550024541943735683698825729107169784121859303679576190043053971098619482518966,
    0.30604211922918460908352322458238267491364761240808144365672914035541182057561602,
    0.27628819377953199032764527852113018571480158713199615061350557943837692361947673,
    0.24626694739814402597841233060681906225445876784271953622773154748056039697227724,
    0.21600723687604175684728453261710133370575597251013327270362112636199019383511349,
    0.18553858172277277270028588015893298081440861045059851073373563933981744638633134,
    0.15489058999814590207162862094110950120185022005493763239673032635355782483224742,
    0.12409272435916037178300113567216009078143172259769256694261338717436330385704264,
    0.093174701560086140854450377639600347885671383922138614682889155646180251667388455,
    0.062166564819416169080162369062493662297242677427767328350959605291793221376303274,
    0.03109833832718887611232898966594919424729622295999804297479623566203052396085303,
    0.000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 51, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod101 =
  (Array<Scalar, 51, 1>() <<
    0.0005067616680348913680032300567941887518287937656261181852345810781991972840225265,
    0.0014201102381663570584892416091048193465264524541087255690324797033780264371378443,
    0.0024231037458205732718680199597014327561652907752767970046735109499795891139594408,
    0.0033945908928972374308566272798283577464790273981323628219633910719096866727942679,
    0.0043377036052637357835434236062529196212776874888838938434918691237130733694296127,
    0.0052869070843107008149663109052265184192740628699843182827134449147220404949653886,
    0.0062467616528934688052784611929436287936657511082212435238753047793273398053702817,
    0.0071958559137583317710477090115739724665457976860928413068048179598747942531722652,
    0.0081275336625593873786803729424595698724669984477170325948044616013886318795420185,
    0.0090539068531320007348298463831867097402647825753449997945726403813916968346042016,
    0.009979080512771972715200068965554913528356231567843305569446094148266096909372788,
    0.010893031149145421391853736320483790569442699518854158810249676216489805081294926,
    0.011790732100542854676267459488075106432961544323198767536792266807733310172575233,
    0.012678061837012244403571737226388367843138693595414916963670050311112016368076399,
    0.013557616011559140930458157803339779922025867082404516175216726479903273446963214,
    0.014423324872289546908736058736990277588034608393700529431525712879068723262332273,
    0.015271463812173062587031639835809499053421014694852841056802111619818387756779407,
    0.016105363478293306328795864483333898131402609358880971393379558087992878685044205,
    0.0169266578757385410821135554639236120053284120708993309030029913408983053062802,
    0.017731168466700687369451433287130214015561890395551558366076660379775846052431835,
    0.01851604246177747374224081714934718333316987698583246179201915068120101086077849,
    0.019283323521808148253018898011621324211172432316496618395493706032629309461160724,
    0.020034045830719434860935189792575788705125140647929730848093335928153263266553814,
    0.020765128471719162242080239721667014467417714379933742197852970662963108214313783,
    0.021474338201809933451719273439764484979955312298180504510379745709419970828716168,
    0.022162984926601566106843498326675210942798501518235751101007425428387741421797238,
    0.022831717568874006991633399959920337492142779454176188110611499661359282431027686,
    0.02347818407891019300458609050334622304513636748515916674428728527926709073900315,
    0.0241006258772183059766657601446981106870394177800294998766423561493861178112161,
    0.024699903537325739494760209714837493240304001590665263765386724461889146267782989,
    0.025276412574832709146478978607374461544991069521056035977098906706981112652662431,
    0.025828336809121795208844863774061423815260199623804520713940177467353684569416347,
    0.026354306818690138454725762609577214047838980886455499187239142399016464389427558,
    0.026854896362906597368937147115205511562097049173356744360672668534499093639163511,
    0.027330331890109643833054043505441732455624485951096646926475421650779252865021297,
    0.02777922389243983336140685575895975209594524979909035753452856817632766313407731,
    0.028200540579478679146298601877461933647760901542994281833247838079447370810608153,
    0.028594668383406057739047317910104991005059111241583481345572649097644947042245667,
    0.028961719790501033567571417319566857681950606520649305530413519367606937482945878,
    0.02930066703511978233684077865154509911023252219986385927661387556254618615908519,
    0.029610784940459955030252135399656592776202093074326473843937516543966954145435996,
    0.029892335817039792458804648308739805429389870862753444433966953431271345762248672,
    0.030145353774570835194075130209130172717017050744178186905186806515761016979002173,
    0.030369133200164873181378495665853924429831586436255842325131817133910275895974667,
    0.030563237706310037205460535834084086337452124879483669328875116764827987947477678,
    0.030727845669416690205934370165811952406252674130476871866547213871460137250485308,
    0.030862934121709973760264323329606162470535220642995158505567362290512152007504564,
    0.030968095623668437958542109562984133994860761141090868969395238341544867341582861,
    0.031043173996945701068760645698647835403759858415354398072761300232665677516335674,
    0.031088287782405219104218184906343066138189551508635881242765199399006108947477651,
    0.031103366641749575467154644934577086442638543353740630689920317206544005946498301
  ).finished();

template <typename Scalar>
Array<Scalar, 25, 1> QuadratureKronrod<Scalar>::weightsGauss101 =
  (Array<Scalar, 25, 1>() <<
    0.0029086225531551409584007243428554808066729964599463206185935272835507710398644955,
    0.0067597991957454015027788781779850318018738324064668105528787058554029967946284717,
    0.010590548383650969263569681499241022339401819086459129456334717145649160628911148,
    0.014380822761485574419378908927324349937031786170587892772101622154251736563149076,
    0.018115560713489390351259943422354619844667317049734035426452915873362289722865871,
    0.021780243170124792981592069062690341227313462357934296044027139447670830222303394,
    0.025360673570012390440194878385442723460161259975712137339396332952037757747180002,
    0.02884299358053519802990637311323243251784686559353745783571262305626532966411371,
    0.032213728223578016648165827323003953448589058833425217158329605415911300245506574,
    0.035459835615146154160734611000975797096960000496984470912870450859971166530601475,
    0.038568756612587675244770150236385934864771705000518926510807400152266753249719121,
    0.041528463090147697422411978964067017808977975485840990077036977952185281006634482,
    0.044327504338803275492022286830394197460761298355453165663231906827622729471292246,
    0.046955051303948432965633013634987682514064306186052729965804279343365060719970684,
    0.049400938449466314921243580751432728692287050966613124792123560248069845705921071,
    0.051655703069581138489905295840095279649825449395439645099533186451192177308464973,
    0.053710621888996246523458797255664552768023213529922153045899999181596516176073106,
    0.055557744806212517623567425612269497595135299983902675817172778510318550714544707,
    0.057189925647728383723029315065993163011575372257091754936853781352804925666454526,
    0.058600849813222445835122436630848466209767513444025473313250342475354480050786738,
    0.05978505870426545750957640531258523079666604207266900458524197880361922141441125,
    0.06073797084177021603175001538481100160979927323540353572319677456175957651696701,
    0.061455899590316663756406786083915375097267575764007514309224050359059109952299118,
    0.061936067420683243384087509780830688572877056691244904942759706116954821286810802,
    0.062176616655347262321033107360613430867682469201026633101165637619757611600550441
  ).finished();

template <typename Scalar>
Array<Scalar, 101, 1> QuadratureKronrod<Scalar>::abscissaeGaussKronrod201 =
  (Array<Scalar, 101, 1>() <<
    0.99995250325234874194558759586872675230201032186296284264016025931223554688027445,
    0.99971372677344123367822846934230067671834952730840322673419831933257783262929538,
    0.99922816588380125603468689462902570985161537549449401302264675205309081000482338,
    0.99849195063959581840016335918634916230485485042056970157273162169779619205216114,
    0.9975136131227297392523159490732886300840438086105855328504272247837664672750345,
    0.99629513473312514918613173224113103543643128814043037945006804963263320358337558,
    0.99483262193692678214229984365392976193623306275106700515940627801153579975722751,
    0.99312493703744345965200989284878347073177145886652037865688774627504075811587676,
    0.99117498765102584468434111430887815181054026590303275139060422686300812986660679,
    0.98898439524299174800441874580773663183933363710694752775181516166893763524225342,
    0.98655201560314858543214329463373901430393735434645873465873729301047236552050696,
    0.9838775407060570154961001555110081673443670168508022103488777183124296552680743,
    0.9809628425806126209479438330385845833627089215081985968088520965634662075664081,
    0.97780935848691828855378108842920192863523449426625397830857664909699260818287522,
    0.9744169257913283019115695267641969973565062844188333127360677231068676310028385,
    0.97078577576370633193089785789750538855055719947820713629170967074707038769534787,
    0.96691753657125109640782216846696070235549924264129286565786583612967427356381259,
    0.96281365425581552729365932603016638643733150673041414097823402602202884749687708,
    0.95847452546444300989234207911968140986589441225371679937352521472602462656561744,
    0.95390078292549174284933693089435764464522145101466774766703291518302376143065338,
    0.94909405007764308807002661063238399920305087971146783531365541174567002763284255,
    0.94405587013625597796277470641521874673972037338209687162963428605650333832832396,
    0.93878704353080861159581415143454540129149440268213063079768088488758970069266408,
    0.93328853504307954592433366813086250408354607429701929584795824289633796152615476,
    0.92756205890488017513109041315467906526813611874056251522487036560695264858537353,
    0.92160929814533395266695132848198745912458279773219614661493192121819579597248843,
    0.91543138327874017569217880264508697295963148874565638359310451731072889505826399,
    0.90902957098252969046712633778914606444327728958458893808512631931921591259254389,
    0.90240571020837873902681113376935748186170440444374046181786810177914366929066064,
    0.89556164497072698669852102243022776984818176899771982997935480576927699624388793,
    0.88849879400991357098633030987871529168085698938795641971263781294954793716707422,
    0.88121867938501841557331682542780558244549441102125780294089398795117445916154906,
    0.87372330591888454232901721359869700713999812944025355745244194948322911284064023,
    0.86601468849716462341073996967624296638031483930559307213628235309336859422325162,
    0.85809450656528158256769359279995027785553637603413169608273438624919857910596854,
    0.84996452787959128429336259142010465407379077950067235433572825255256440309392069,
    0.8416269226315942280342849082868531074672837728102279774930777439885216886499554,
    0.8330838798884008235429158338447556799074948303099622593030660749580722045908198,
    0.82433731934785511555382066394577351308957189674952336303834583202605873039503561,
    0.81538923833917625439398875864925800538255037651370272289980746033744449913502565,
    0.80624197522998149898858119947772518581699983645897225194589107015793506805673095,
    0.79689789239031447638957288218324598288952685596429050218976918513654297639124161,
    0.78735913298215327121915096807989317961453460725591945907705536504118976099807094,
    0.77762790964949547562755138683449010653853979993607887501873636620408554569165111,
    0.76770672752390789522106835290910988619423163187482673248010248495568739948696573,
    0.75759811851970717603566796443840077231310897190004171267578610272464157768039474,
    0.74730443440010216722543283418354970398268442664090452188566039319270549811476756,
    0.73682808980202070551242771482010100284327844624712344223737172882440212865143482,
    0.72617175233016540458785543702154726618162507726741028895897716904976999898896028,
    0.71533811757305644645996712270436596408439783859562963463724529713697823541087394,
    0.70432973201100171130158275065992755531836865624423571183561546060719495545637785,
    0.69314919935580196594864794167543726558700001793072845377465342766607645373354428,
    0.68179934329913790750199866457132454892446683289893859792093772337988348451504727,
    0.6702830156031410158025870143232266136698056840288239544064363680107923867496782,
    0.658602944021433085548225598192316464995912568826723879246588620349765171395506,
    0.64676190851412927983263030445863043501973378424852800098817084452833118551656917,
    0.63476288086691287961700686682300223062843045115192210043064671688599954550712113,
    0.62260886020370777160419084517231224465381773228981600208598317568067003975092321,
    0.61030274223394973052304014680666051705840336769498221505142428080535613983339695,
    0.59784747024717872126480654514934063639489919232048533558906545254515827700731834,
    0.58524615484722223751330407348246631581348705331813432605098481292781768153703545,
    0.57250193262138119131687044352572544896003394967556027804286239025942413380625646,
    0.55961785385987287004483883274572350988535188007655640771644707330432368177641318,
    0.54659701206509416746799425718174990395624177593752781162202532907583693797493799,
    0.53344264632810924391925934260941164781644110851199692084731145507214812165764285,
    0.52015801988176305664681574945520853076893769042009385340852137005923618147420775,
    0.50674632405992146013910672747973470564589036548716808812969376684106570712123754,
    0.49321078920819093356930879344933399099072332535855612691111003096900479156851602,
    0.47955477168853305490480433055889014820419073581019635918582519118037583604981499,
    0.46578164977335804224921662339575458161165111021221096633847361718416962590265491,
    0.45189474208663614330483287246151294430151576448075443596850179155169637644431453,
    0.4378974021720315131089780436221959621257017634841045951883102040511231446537147,
    0.42379309169388210181506692715279269905002159373794326332469530517783449764489355,
    0.40958529167830154252886840005715770149536438916475455934183324060339965753338301,
    0.39527743404816671610367673557861642687518028284139534813237517318644233460839411,
    0.38087298162462995676336254886958740374970726512371092366889185298969390392699111,
    0.36637548876362800231863519558827019975726941799314487265201672399391759308706836,
    0.35178852637242172097234382954897056524931809638907120117648419827719592115823539,
    0.33711562544519365010380511464074285765053795714571057161886849317437515727467157,
    0.32236034390052915172247658239832542740219162302308570713962354648380016879804964,
    0.30752631562753657120752788303988100046876429120432597453643389055296287651557588,
    0.29261718803847196473755588823549438456153898917258097209666165914792758663038045,
    0.27763657675183495616346814290881136285663496860995320546719909263639685929594981,
    0.26258812037150347916892933625498214113202269453552213566196852634363603233655765,
    0.24747551869798892096614882491742687591540876456389342369413160353064557688992113,
    0.23230248184497396964950996320796411069750977150713691375901392071363693959901823,
    0.21707269541726899854706722200296707797219389992709913579021716192452488394462826,
    0.20178986409573599723604885953039646294369200355904891127621054229266731508763511,
    0.18645773958437819065168393518669992652130113816299397056446099568260831882608446,
    0.17108008053860327488753237470708980746585972511806677468733373382260561690817862,
    0.15566062775725995230028233532247535151338751890638695516639810155517851057168835,
    0.14020313723611397320751460468240551661687300626335977203359092819977298617463277,
    0.12471139826072812045287156735452075155899823333650838419447512821503567702082599,
    0.10918920358006111500342600657938488688489962996916339337695945186245066981761193,
    0.09364033428354398098988456682945235155973991630929011377333468303183642111603819,
    0.078068582813436636694817371201552573976350027448530116055229733175736429019160844,
    0.062477761469230100103575480465872781103870072595240855240096272333845078696593091,
    0.046871682421591631614923912933848309537065399086024079631272622119450114205366966,
    0.031254152083866780818574350452549650096473744203461154596595356071327589041068266,
    0.015628984421543082872216699997429340147756182855561472713798730873586490591815486,
    0.000000000000000000000000000000000000000000000000000000000000000000000000000000000
  ).finished();

template <typename Scalar>
Array<Scalar, 101, 1> QuadratureKronrod<Scalar>::weightsGaussKronrod201 =
  (Array<Scalar, 101, 1>() <<
    0.00012796430957024721771296604719777847195024888314491298536089660760502098162955961,
    0.00035867672428027546451819698699002695000334366552165790475764949447384556675106143,
    0.00061229953852751686968468056548070834614262353517827340306832361595979656851668384,
    0.00085841483623935311664167374912297679663629462243028231072337825364181034386886584,
    0.0010979641613205989025539746515543369532066868037705504108098643250258315795272045,
    0.0013398378066038234175486301930449888511095212624124557998035185592883203793369494,
    0.0015853911405509920968761271523943949971063528427767511393814094761314723457757005,
    0.0018293700134566080799370236360170535448426285654525893897563081397709421240797008,
    0.0020702317043597587378644553128718344153310849590850694516701080200433764329375308,
    0.0023112300848714947862257442255101342873804387730657351599990911247422888379649286,
    0.00255360720035108161107860930247813105889546630505376341763961285395243912562979,
    0.0027949675414986555413292461029658737758380722160573537404973860344830432304606582,
    0.0030341646879644937991732745413399004686059331342916364129117962038309623595270791,
    0.0032728790204999995168586532310397215515204093393701892626781163070656509964907574,
    0.0035119694684313947134713258486383901707591880459282971905527414930960480289697322,
    0.0037500208235679625297331584857121123481592236850695311818529544608511575044140412,
    0.0039861974493123518455029781372340756053246865784176638486002809795970692344516241,
    0.0042215324033957824226534568270044519205246652946206710262022397565513337347753949,
    0.0044566365582449451022415071353397897871327196163669068422313991439848639691894231,
    0.0046905518454874843948150616470874501860091007592885804073490058434865313026326716,
    0.0049226417164217777802125652202859685914948288331372484973461433471757101535464744,
    0.0051536068857031755408206999064464003429576963088570107476260711315599022873744938,
    0.0053838988095782466461504351731728990995801179360793012333511143875283988824390817,
    0.0056128134311087159756131579383403950163615325554651073329455932638912822829955314,
    0.0058398464386745218797981299824198382382313630986089299789067707660340187164620928,
    0.0060655032097330386392103344018355929837674211647193817397918069520167378924425184,
    0.0062901277697376750495120212345184374307693024506169917718444699595454055951992898,
    0.0065131741131553513562397958771292153229601461446018475619865968928402709124732164,
    0.0067342304238343590654611050189077139337579428661822207707786337808575949872281247,
    0.006953676477075337786183334446340796072728823655007729556830733588966239695327748,
    0.0071717805331525334152475068483642033138873386318900076985222409776903999220710735,
    0.007388103069859311736874012887741702411414660812955358416145731714182809070196702,
    0.0076023000511743082981761004926373986468105086452740350632547733110379687405467589,
    0.0078146652066203450508571171901635439907246077530607313211824329796005848153777768,
    0.0080254113225864847130896236654761691620065749144554863424355267104757155218408888,
    0.0082341750173162369007953627549445305549628898633999967384011584675845717538937675,
    0.0084406639368728044009330414891942086291374465852201205963903009625126760532983883,
    0.0086451100486787791265613995932910752939099547509391735871479670751944164499904553,
    0.0088476842799883102000720172538543948928738870437655490660791366373524429380132273,
    0.0090480802999367122883507116524369047740027123005681561565188429800856323868104392,
    0.0092460465239111172468757011917770079920932521860782221947944031399490345154439152,
    0.0094417689887518555231490350069925880072693823830969827196264088217003856275546945,
    0.0096353862617946239110648541143514885197940990130829222067505677060959116134401026,
    0.0098266364237308806557132633428380357347039651060136408785718376984084554397731416,
    0.010015301011613050532685374501837233834776572058648192599965262726862196175933081,
    0.010201530950884959860159194222914446041707644827810780587494366754012256739957457,
    0.010385439297068512719261987115861145790219618002842519184406523374017646807543364,
    0.010566799832475650983732159431681213635020572786185088337939143034582359811070414,
    0.010745421707786930806466925673793850623684196110303698166508702307118083202904637,
    0.01092142841500597232724852424011180927323636614696556978685708033399497341008981,
    0.011094912570946068839712321559249109887657410300540483010498050963877278310700365,
    0.011265677463329562379239864543644459750202635380297528804096749933061516332791977,
    0.01143355579967040516909625306002457417492109489981932000788904127890992142347185,
    0.011598649256434445219827331107630190578000504475113610267588970575186121131280781,
    0.011761033855415801075326674091744816846998206048497136935510832625781068134721264,
    0.011920537867504403934453816057506022872063175002543383509538226159528104747552113,
    0.012077014514385699948912210264425857295556891053281220301392265478570485795673499,
    0.012230547871132662101095593714042259316376050121823650043562863662212585473281173,
    0.012381200330581324780944269008285738703304969112850639490745309973060539968557831,
    0.012528821777405525944425029878477921066103362064490235107657008410873128538637036,
    0.012673283632199710690402540685825953767348755717563518105961711518392520113892036,
    0.012814655594024018207343874813778631605432569443433585046893419906057309814881739,
    0.012952988748919475081813213476433299795624894244315658469994778732894961207865173,
    0.013088152043040839471312496283486708510361122242325801548377173219660046229278985,
    0.013220033314594257637994566887194623341896203918156331314844045290641899265213678,
    0.013348690394779972195327951198970571811973774828648346602871664433909777472725791,
    0.013474164900427606531293848497383318855473224805409014046301557404418372880647108,
    0.013596342880626177978373367876493080301703045243529885931650629503857655502509067,
    0.013715127210215769326907718938226202645238092734648705089972650434087217373351927,
    0.013830565826315921195219128966090043890046513683997048589652817637553377044361536,
    0.013942692340509307650524108132710652800077601129749872595132019302664012868169804,
    0.014051408387484339088942901831696308867223072632758322664219032702545902410881092,
    0.014156630803865531417978479935282616406305262080098648145822299370449860061063822,
    0.014258399198227061517429848014328321056911496793145892518890157214501981004057578,
    0.014356740345895568856538939784086363542743965181294644072533577606900939275778925,
    0.014451570284503111749943566106087701240628518005103806968971509273681679582573255,
    0.014542818976299665555379082424783313670939749408074544373133101501286957670332332,
    0.014630518947339678238811859583899045897194866693151054423888544985084355956602508,
    0.014714691067192241076160706897458587860727652799023690244622857100769384111723232,
    0.014795264852720915232737132968617729876228382146033580665531937506603937549441691,
    0.014872182745515508511148961751492526604928929132392210648305575142825179735562568,
    0.014945471179015717793141432691442477704376040780252171401347168609537645095571829,
    0.015015145849926017759294095871454437550320023235881111742007479237584653693240446,
    0.015081149035021367040849603006779714117062048739908760046697452522312546272242481,
    0.01514343516330660012211995270464269800292539698573623280323045297467105440993818,
    0.015202025355144774391258816468885690252119194633339354456263715649397039455814692,
    0.015256930699286266811525116832044706299713997322687500363942179440345153890073899,
    0.015308105677903958217539375599151166168016824036906432288004692645647840309132108,
    0.015355516344118448715309367442657603333394564027628295832810670403391564170794388,
    0.015399179107542670087307463298658972191788340174174891692373181586040738802798822,
    0.015439100867148200980732475752457497126128870923871144711932588840116166548641285,
    0.015475247892084647776910692026083806762967931684117965182892166819144603604085942,
    0.015507597606598903695895374740663185458075107529516066695958362762571117967313596,
    0.015536162158565232938223912982007177448262379546821891902929387482461350865191008,
    0.015560944543416764629386459953154191065868874596810009507115098963230658134258016,
    0.015581922514380536783510803640242216460304149048783119123583425469465311662104107,
    0.01559908471168710670698089639871094604147763682663977415666365901020379148853283,
    0.015612439334034819894684609596196884211263060833699342560701418358810879590839977,
    0.015621985637244873468511278728396985843872031123298744920733056937770032176622212,
    0.015627712657001690033211361426951175508666968457827841433198468484376983689388781,
    0.015629620184604849932106033702755153943760908693706215010637144953233808275923502
  ).finished();

template <typename Scalar>
Array<Scalar, 50, 1> QuadratureKronrod<Scalar>::weightsGauss201 =
  (Array<Scalar, 50, 1>() <<
    0.00073463449050567173040632065833033639067047356248290783928726950898335062986983262,
    0.0017093926535181052395293583714911952437313854914625798036007489234084445956259805,
    0.0026839253715534824194395904290011200819311149509982762690644318239488226485787623,
    0.0036559612013263751823424587275251956992065674051522038218411029596307090177714415,
    0.0046244500634221193510957890829784766503524952948945293619263770470912564629372978,
    0.0055884280038655151572119463484392107313186940080771526440142499222424659184529977,
    0.0065469484508453227641521033314952636999383633664760020017228174250864063635801271,
    0.0074990732554647115788287440163977831635834789481450934203038684883701485369385885,
    0.0084438714696689714026208349023010019346444598841014134354326332192946749974204757,
    0.0093804196536944579514182376608121187307870432386741653194447005636941166066281285,
    0.010307802574868969585782101727835377976058343841426008333842775071864933799362723,
    0.011225114023185977117221573366333584777226419564382406650628834594453264768932778,
    0.012131457662979497407744792448748170736963123311260913909729897680347557298925124,
    0.013025947892971542285558583758901790134964735841749607616943625123572119559218101,
    0.013907710703718772687954149108004637795180812143119072272739734891365593505474941,
    0.01477588452744130176887998752035425716938874311460362540933212194986996874726922,
    0.015629621077546002723936865953791925552469979809936949742907562277340183034572498,
    0.0164680861761452126431049800882107808211676616037983699979068851159446961446108,
    0.017290460568323582439344198366741674811623508565167627027193054069332038994169172,
    0.018095940722128116664390751420493031347578744958389888004244195963303767090292675,
    0.018883739613374904552941165881543234297111276347424480035830541209927879026512715,
    0.019653087494435305865381470245444065555269599491250694365334382163196160004919399,
    0.020403232646209432766838851657583770605709699302619548014180639792465298954178733,
    0.021133442112527641542672300440969681635329728874514691929000402836363556221427821,
    0.021843002416247386313953741304398024765348999823246478824022075286283969300495896,
    0.022531220256336272701796970931673962340158935348709416765680916568358822308692033,
    0.023197423185254121622488854182727288451154485736086930008437252875410347383636207,
    0.023840960265968205962560411902283432144707449092616987445170902796752600414462453,
    0.024461202707957052719975023349772890646295732397804463267335052590007851847579527,
    0.02505754448157958970376422562092326422383855852792884422277105548718781179659384,
    0.025629402910208116075642009862150870926977670020267908013105037877735747305157281,
    0.026176219239545676342308741757301885011275131190694937964750745438331226959545181,
    0.026697459183570962660384664186336350634655750390011819064005976170326587721581106,
    0.027192613446576880136491567802170692266987896012001261208528112892727270272879346,
    0.027661198220792388294204155870426455292400358664220200139633127041362728663447822,
    0.028102755659101173317648330186994550451418099400205024016459828502472793532279895,
    0.028516854322395097990936762864457873259842725483968579158384908743092424271112027,
    0.028903089601125203134876228134515265315607868055260986668246483438441942031706376,
    0.029261084110638276620119023495640954443084195045348286203408598910126832031479002,
    0.029590488059912642511754510678836585172806285071367742692937007289827203258806102,
    0.029890979593332830916836806668595827658091414260798968528747546985658466500024856,
    0.030162265105169144919068681610479232657102325782705606989026123052424670515859093,
    0.030404079526454820016507859818825176605607248310117346203578331714732557033999068,
    0.030616186583980448496459443262053192853086023789057784683063872871077323942355968,
    0.030798379031152590427713903030559760094970834470370968090508864870137029415308493,
    0.030950478850490988234063463470747927382987177766940743710061757147422749434355389,
    0.031072337427566516587810170242918034845915436347957387620233163958311285923286396,
    0.031163835696209906783818321217186653343836368683928071198460311563109478373133172,
    0.03122488425484935773237649864809813488180274068218414014376947870775089027272963,
    0.031255423453863356947642474386198028787833836726090909943220614599831976561410945
  ).finished();
}

#endif // EIGEN_QUADRATURE_KRONROD_H
